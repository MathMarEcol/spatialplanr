[{"path":"https://mathmarecol.github.io/spatialplanr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Jason D. Everett Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"A Basic Spatial Planning Workflow","text":"code written simplify process running prioritizr analysis given region. still work progress feel free submit pull requests new features code improvements.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"set-user-parameters","dir":"Articles","previous_headings":"Overview","what":"Set user parameters","title":"A Basic Spatial Planning Workflow","text":"can set region defined splnr_get_PlanningUnits. can also define region square boundaries need. Set shape area planning unit square kilometres. Choose CRS analysis","code":"Region <- \"South Atlantic Ocean\" # \"Australia\" Type <- \"Oceans\" # \"EEZ\" Region <- c(xmin = 150, xmax = 160, ymin = -40, ymax = -30) Shape <- \"Hexagon\" # \"Shape of PUs PU_size <- 20000 # km2 cCRS <- \"+proj=moll +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m no_defs\" # Mollweide"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"analysis-region","dir":"Articles","previous_headings":"Overview","what":"Analysis Region","title":"A Basic Spatial Planning Workflow","text":"Start analysis defining region setting planning units. Get boundary chosen region. Get land boundaries remove overlap. object “landmass” represents land mass removed (inverse = FALSE)","code":"Bndry <- splnr_get_Boundary(Region, Type, cCRS) landmass <- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\") %>%    sf::st_transform(cCRS)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"create-planning-units","dir":"Articles","previous_headings":"Overview","what":"Create Planning Units","title":"A Basic Spatial Planning Workflow","text":"can check PUs look like","code":"PUs <- splnr_get_PlanningUnits(Bndry, landmass, PU_size, Shape) (ggPU <- splnr_plot_PUs(PUs, landmass)) # Plot Planning Units"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"aquamaps","dir":"Articles","previous_headings":"Overview > Get the features","what":"Aquamaps","title":"A Basic Spatial Planning Workflow","text":"Get aquamaps data species region Set depth range probability cutoff (CO) extracting AquaMaps data.","code":"# MinDepth <- 0 # MaxDepth <- 200 #  # AQM <- splnr_get_AquaMaps(PUs, MinDepth, MaxDepth)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"geomorphic-features","dir":"Articles","previous_headings":"Overview > Get the features","what":"Geomorphic features","title":"A Basic Spatial Planning Workflow","text":"Add geomorphic features existing features object.","code":"# GeoMorph <- splnr_get_Geomorphic(PUs, Feature = c(\"Shelf\", \"Ridge\", \"Plateau\", \"Seamount\"))"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"apply-cutoffs","dir":"Articles","previous_headings":"Overview > Get the features","what":"Apply cutoffs","title":"A Basic Spatial Planning Workflow","text":"Add geomorphic features existing features object.","code":"# Cutoffs <- 0.5 # AQM_bin <- splnr_Apply_Cutoffs(AQM, Cutoffs) #  # Cutoffs <- c(Shelf = 0.01, Ridge = 0.2, Plateau = 0.1, Seamount = 0.3) # GeoMorph_bin <- splnr_Apply_Cutoffs(GeoMorph, Cutoffs)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"join-all-features-together-","dir":"Articles","previous_headings":"Overview > Get the features","what":"Join all features together.","title":"A Basic Spatial Planning Workflow","text":"","code":"# features <- GeoMorph_bin %>%  #   dplyr::left_join(AQM_bin %>% sf::st_drop_geometry(), by = \"cellID\") #  # (ggFeatureNo <- splnr_plot_FeatureNo(features, landmass)) # Plot Number of features"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"longhurst-provinces","dir":"Articles","previous_headings":"Overview > Get the features","what":"Longhurst Provinces","title":"A Basic Spatial Planning Workflow","text":"can also assign Longhurst Province PU set targets individually province. simply demonstrate , implement spatial plan.","code":"# Longhurst <- splnr_Match_Longhurst(PUs) # (ggLong <- splnr_plot_Longhurst(Longhurst, landmass))"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"get-locked-in-areas","dir":"Articles","previous_headings":"Overview > Get the features","what":"Get locked in areas","title":"A Basic Spatial Planning Workflow","text":"","code":"# LockedIn <- splnr_get_MPAs(PUs, \"Australia\") %>%  #   splnr_Apply_Cutoffs(0.5) %>%  #   dplyr::mutate(wdpa = as.logical(wdpa)) # (ggMPA <- splnr_plot_MPAs(LockedIn, landmass)) # Plot Locked in areas"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"get-fisheries-cost","dir":"Articles","previous_headings":"Overview","what":"Get Fisheries cost","title":"A Basic Spatial Planning Workflow","text":"","code":"# Cost <- splnr_get_FishCost(PUs, group = \"all\") # (ggCost <- splnr_plot_Cost(Cost, landmass)) # Plot cost"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"identical-fixed-targets","dir":"Articles","previous_headings":"Overview > Set up targets","what":"Identical fixed targets","title":"A Basic Spatial Planning Workflow","text":"","code":"# Targets <- data.frame(Target = 0.2)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"inverse-area-targets","dir":"Articles","previous_headings":"Overview > Set up targets","what":"Inverse area targets","title":"A Basic Spatial Planning Workflow","text":"Set minimum maximum limits inverse area targets","code":"# minTarget = 0.2 # maxTarget = 0.5 #  # Targets <- splnr_get_TargetsIA(features, minTarget, maxTarget)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"add-different-targets-for-iucn-redlist-categories","dir":"Articles","previous_headings":"Overview > Set up targets","what":"Add different targets for IUCN RedList categories","title":"A Basic Spatial Planning Workflow","text":"run code need sign IUCN RedList token. Start running rredlist::rl_use_iucn().","code":"# speciesCol <- \"Species\" # Targets <- Targets %>%  #   splnr_Match_IUCNRedList(speciesCol) %>% # Add RL data to the df #   dplyr::mutate(Target = dplyr::case_when(IUCN_Category %in% c(\"EX\",\"EW\",\"CR\",\"EN\",\"VU\") ~ 1,                                           # TRUE ~ Targets$Target))"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"get-the-list-of-features","dir":"Articles","previous_headings":"Overview > Set up the planning problem","what":"Get the list of features","title":"A Basic Spatial Planning Workflow","text":"","code":"# feature_names <- features %>%  #   sf::st_drop_geometry() %>%  #   names() #  # out_sf <- cbind(Cost,  #                 LockedIn %>% sf::st_drop_geometry(),  #                 features %>% sf::st_drop_geometry()) #  # p1 <- prioritizr::problem(out_sf, feature_names, \"Cost\") %>% #   prioritizr::add_min_set_objective() %>% #   prioritizr::add_relative_targets(Targets$Target) %>% #   prioritizr::add_locked_in_constraints(\"wdpa\") %>% #   prioritizr::add_binary_decisions() %>% #   prioritizr::add_default_solver(verbose = FALSE)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"solve-the-planning-problem","dir":"Articles","previous_headings":"Overview","what":"Solve the planning problem","title":"A Basic Spatial Planning Workflow","text":"","code":"# s1 <- prioritizr::solve(p1)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"plotting","dir":"Articles","previous_headings":"Overview","what":"Plotting","title":"A Basic Spatial Planning Workflow","text":"","code":"# (ggSol <- splnr_plot_Solution(s1, PUs, landmass)) # Plot Solution  # gg <- patchwork::wrap_plots(list(ggPU, ggMPA, ggCost, ggFeatureNo, ggSol), ncol = 3)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"compare-2-solutions","dir":"Articles","previous_headings":"Overview","what":"Compare 2 solutions","title":"A Basic Spatial Planning Workflow","text":"run another problem/solution combo compare output original one. much lower target (30%), expect less area set aside.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"create-the-second-planning-problem","dir":"Articles","previous_headings":"Overview > Compare 2 solutions","what":"Create the second planning problem","title":"A Basic Spatial Planning Workflow","text":"","code":"# p2 <- prioritizr::problem(out_sf, feature_names, \"Cost\") %>% #   prioritizr::add_min_set_objective() %>% #   prioritizr::add_relative_targets(0.5) %>% #   prioritizr::add_locked_in_constraints(\"wdpa\") %>% #   prioritizr::add_binary_decisions() %>% #   prioritizr::add_default_solver(verbose = FALSE)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"solve-the-planning-problem-1","dir":"Articles","previous_headings":"Overview > Compare 2 solutions","what":"Solve the planning problem","title":"A Basic Spatial Planning Workflow","text":"","code":"# s2 <- prioritizr::solve(p2)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"plot-comparison","dir":"Articles","previous_headings":"Overview > Compare 2 solutions","what":"Plot comparison","title":"A Basic Spatial Planning Workflow","text":"","code":"# gg <- splnr_plot_Comparison(s1, s2, landmass)"},{"path":"https://mathmarecol.github.io/spatialplanr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jason D. Everett. Author, maintainer.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Everett J (2023). spatialplanr: Help files prioritzr Spatial Planning projects. R package version 0.0.3, https://github.com/MathMarEcol/spatialplanr.","code":"@Manual{,   title = {spatialplanr: Help files for prioritzr Spatial Planning projects},   author = {Jason D. Everett},   year = {2023},   note = {R package version 0.0.3},   url = {https://github.com/MathMarEcol/spatialplanr}, }"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Help files for prioritzr Spatial Planning projects","text":"repository specific work Mathematical Marine Ecology Lab University Queensland. intended used anyone outside MME Lab without permission Professor Anthony Richardson. code written simplify process running prioritizr analysis given region use workflows data MME Lab. still work progress feel free submit pull requests new features code improvements.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Help files for prioritzr Spatial Planning projects","text":"aware package early stages development. Functions documentation complete installing moment risk. still interested, can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"https://github.com/MathMarEcol/spatialplanr\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_PUs.html","id":null,"dir":"Reference","previous_headings":"","what":"Planning Units — dat_PUs","title":"Planning Units — dat_PUs","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_PUs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Planning Units — dat_PUs","text":"","code":"dat_PUs"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_PUs.html","id":"dat-pus","dir":"Reference","previous_headings":"","what":"dat_PUs","title":"Planning Units — dat_PUs","text":"data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_PUs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Planning Units — dat_PUs","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_bndry.html","id":null,"dir":"Reference","previous_headings":"","what":"Boundary of planning units — dat_bndry","title":"Boundary of planning units — dat_bndry","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_bndry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boundary of planning units — dat_bndry","text":"","code":"dat_bndry"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_bndry.html","id":"dat-bndry","dir":"Reference","previous_headings":"","what":"dat_bndry","title":"Boundary of planning units — dat_bndry","text":"data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_bndry.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Boundary of planning units — dat_bndry","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Regionalisation — dat_region","title":"Regionalisation — dat_region","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regionalisation — dat_region","text":"","code":"dat_region"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_region.html","id":"dat-region","dir":"Reference","previous_headings":"","what":"dat_region","title":"Regionalisation — dat_region","text":"data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_region.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Regionalisation — dat_region","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln.html","id":null,"dir":"Reference","previous_headings":"","what":"prioritizr Solution — dat_soln","title":"prioritizr Solution — dat_soln","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prioritizr Solution — dat_soln","text":"","code":"dat_soln"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln.html","id":"dat-soln","dir":"Reference","previous_headings":"","what":"dat_soln","title":"prioritizr Solution — dat_soln","text":"data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"prioritizr Solution — dat_soln","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln2.html","id":null,"dir":"Reference","previous_headings":"","what":"prioritizr Solution2 — dat_soln2","title":"prioritizr Solution2 — dat_soln2","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prioritizr Solution2 — dat_soln2","text":"","code":"dat_soln2"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln2.html","id":"dat-soln-","dir":"Reference","previous_headings":"","what":"dat_soln2","title":"prioritizr Solution2 — dat_soln2","text":"data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"prioritizr Solution2 — dat_soln2","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_bin.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary Species Data — dat_species_bin","title":"Binary Species Data — dat_species_bin","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary Species Data — dat_species_bin","text":"","code":"dat_species_bin"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_bin.html","id":"dat-species-bin","dir":"Reference","previous_headings":"","what":"dat_species_bin","title":"Binary Species Data — dat_species_bin","text":"data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_bin.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Binary Species Data — dat_species_bin","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability Species Data — dat_species_prob","title":"Probability Species Data — dat_species_prob","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability Species Data — dat_species_prob","text":"","code":"dat_species_prob"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_prob.html","id":"dat-species-prob","dir":"Reference","previous_headings":"","what":"dat_species_prob","title":"Probability Species Data — dat_species_prob","text":"data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_prob.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Probability Species Data — dat_species_prob","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_apply_cutoffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to apply cutoffs to feature data — splnr_apply_cutoffs","title":"Function to apply cutoffs to feature data — splnr_apply_cutoffs","text":"Function apply cutoffs feature data","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_apply_cutoffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to apply cutoffs to feature data — splnr_apply_cutoffs","text":"","code":"splnr_apply_cutoffs(features, Cutoffs, inverse = FALSE)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_apply_cutoffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to apply cutoffs to feature data — splnr_apply_cutoffs","text":"features sf dataframe feature information Cutoffs single value named vector cutoffs. inverse TRUE, values Cutoffs used. FALSE (default), values kept.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_apply_cutoffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to apply cutoffs to feature data — splnr_apply_cutoffs","text":"new sf dataframe cutoffs applied.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_apply_cutoffs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to apply cutoffs to feature data — splnr_apply_cutoffs","text":"","code":"df <- splnr_apply_cutoffs(dat_species_prob, Cutoffs = 0.5)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_arrangeFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure all features are in the same order. — splnr_arrangeFeatures","title":"Ensure all features are in the same order. — splnr_arrangeFeatures","text":"Ensure features order.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_arrangeFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure all features are in the same order. — splnr_arrangeFeatures","text":"","code":"splnr_arrangeFeatures(df)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_arrangeFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure all features are in the same order. — splnr_arrangeFeatures","text":"df sf object sort Lon Lat","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_arrangeFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure all features are in the same order. — splnr_arrangeFeatures","text":"sorted sf object additionl cellID column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_arrangeFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure all features are in the same order. — splnr_arrangeFeatures","text":"","code":"df <- dat_species_prob %>%       splnr_arrangeFeatures() #> Warning: st_centroid assumes attributes are constant over geometries"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert2Pacific.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a world sf object to a Pacific-centred one\nDefaults to assuming Robinson projection — splnr_convert2Pacific","title":"Convert a world sf object to a Pacific-centred one\nDefaults to assuming Robinson projection — splnr_convert2Pacific","text":"Written Jason D. Everett UQ/CSIRO/UNSW Last edited 8th Sept 2021","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert2Pacific.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a world sf object to a Pacific-centred one\nDefaults to assuming Robinson projection — splnr_convert2Pacific","text":"","code":"splnr_convert2Pacific(   df,   buff = 0,   cCRS =     \"+proj=robin +lon_0=180 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert2Pacific.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a world sf object to a Pacific-centred one\nDefaults to assuming Robinson projection — splnr_convert2Pacific","text":"df sf dataframe buff buffer apply features cross merge cCRS crs use output.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert2Pacific.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a world sf object to a Pacific-centred one\nDefaults to assuming Robinson projection — splnr_convert2Pacific","text":"sf object Robinson projection","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert2Pacific.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a world sf object to a Pacific-centred one\nDefaults to assuming Robinson projection — splnr_convert2Pacific","text":"","code":"df_rob <- rnaturalearth::ne_coastline(returnclass = \"sf\") %>%   splnr_convert2Pacific() #> The legacy packages maptools, rgdal, and rgeos, underpinning the sp package, #> which was just loaded, will retire in October 2023. #> Please refer to R-spatial evolution reports for details, especially #> https://r-spatial.org/r/2023/05/15/evolution4.html. #> It may be desirable to make the sf package available; #> package maintainers should consider adding sf to Suggests:. #> The sp package is now running under evolution status 2 #>      (status 2 uses the sf package in place of rgdal) #> Warning: attribute variables are assumed to be spatially constant throughout all geometries"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_2PUs.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to interpolate data onto Planning Units — splnr_convert_2PUs","title":"Function to interpolate data onto Planning Units — splnr_convert_2PUs","text":"dataset needs raster vector format. input contains continuous data, output area-averaged mean planning unit. input binary, output proportion planning unit covered.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_2PUs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to interpolate data onto Planning Units — splnr_convert_2PUs","text":"","code":"splnr_convert_2PUs(dat, PlanUnits)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_2PUs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to interpolate data onto Planning Units — splnr_convert_2PUs","text":"dat Dataset filename dataset PlanUnits sf object Planning Units","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_2PUs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to interpolate data onto Planning Units — splnr_convert_2PUs","text":"sf object containing Planning Units feature.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_regionalisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to interpolate regionalisation data onto Planning Units — splnr_convert_regionalisation","title":"Function to interpolate regionalisation data onto Planning Units — splnr_convert_regionalisation","text":"wrapper splnr_Convert2PUs() deals need processes layer seperately","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_regionalisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to interpolate regionalisation data onto Planning Units — splnr_convert_regionalisation","text":"","code":"splnr_convert_regionalisation(dat, PUs, cat_name = NA, col_name = NA)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_regionalisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to interpolate regionalisation data onto Planning Units — splnr_convert_regionalisation","text":"dat Dataset raster sf format. PUs sf object Planning Units cat_name character string categories regionalisation col_name name layer","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_regionalisation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to interpolate regionalisation data onto Planning Units — splnr_convert_regionalisation","text":"sf object containing Planning Units feature.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_regionalisation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to interpolate regionalisation data onto Planning Units — splnr_convert_regionalisation","text":"dataset needs raster vector format. input contains continuous data, output area-averaged mean planning unit. input binary, output proportion planning unit covered.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_create_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for creating polygon — splnr_create_polygon","title":"Function for creating polygon — splnr_create_polygon","text":"Function creating polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_create_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for creating polygon — splnr_create_polygon","text":"","code":"splnr_create_polygon(x, cCRS = \"EPSG:4326\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_create_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for creating polygon — splnr_create_polygon","text":"x named vector lon/lat coordinates make sf polygon cCRS CRS use polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_create_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for creating polygon — splnr_create_polygon","text":"sf object polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_create_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for creating polygon — splnr_create_polygon","text":"","code":"splnr_create_polygon(x = dplyr::tibble(x = seq(-50, 50, by = 1), y = 120) %>%                       dplyr::bind_rows(dplyr::tibble(x = 50, y = seq(120, 180, by = 1))) %>%                       dplyr::bind_rows(dplyr::tibble(x = seq(50, -50, by = -1), y = 180)) %>%                       dplyr::bind_rows(dplyr::tibble(x = -50, y = seq(150, 120, by = -1))))"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_Boundary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the boundary of the planning region. — splnr_get_Boundary","title":"Get the boundary of the planning region. — splnr_get_Boundary","text":"Get boundary planning region.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_Boundary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the boundary of the planning region. — splnr_get_Boundary","text":"","code":"splnr_get_Boundary(Limits, Type, cCRS = \"ESRI:54009\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_Boundary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the boundary of the planning region. — splnr_get_Boundary","text":"Limits limits boundary. can either 4 element numeric named vector (c(xmin = 150, xmax = 160, ymin = -40, ymax = -30)), vector ocean/sea names, vector EEZs., Type type Limits provided. Options \"Ocean\" \"EEZ\" cCRS CRS boundary returned ","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_Boundary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the boundary of the planning region. — splnr_get_Boundary","text":"boundary planning region","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_Boundary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the boundary of the planning region. — splnr_get_Boundary","text":"","code":"Bndry <- splnr_get_Boundary(\"North Atlantic Ocean\", \"Ocean\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_MPAs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get marine parks from the WDPA. — splnr_get_MPAs","title":"Get marine parks from the WDPA. — splnr_get_MPAs","text":"code wrapper wonderful wdpar package written Jeffrey O. Hanson. data interfaced planning units. sf object returned PU area covered selected marine protected areas.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_MPAs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get marine parks from the WDPA. — splnr_get_MPAs","text":"","code":"splnr_get_MPAs(   PlanUnits,   Countries,   Status = c(\"Designated\", \"Established\", \"Inscribed\"),   Desig = c(\"National\", \"Regional\", \"International\", \"Not Applicable\"),   Category = c(\"Ia\", \"Ib\", \"II\", \"III\", \"IV\") )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_MPAs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get marine parks from the WDPA. — splnr_get_MPAs","text":"PlanUnits Planning Units sf object Countries character vector countries extract MPAs Status status field WDPA provides information whether protected area established, designated, proposed time data submitted. Desig designation type category type protected area legally/officially designated proposed. Category Stores IUCN Protected Area Management Categories (recorded field IUCN_CAT) protected areas categories reported","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_MPAs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get marine parks from the WDPA. — splnr_get_MPAs","text":"sf object MPAs intersected planning units","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_PlanningUnits.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create square or heaxagonal planning units for your area of interest. — splnr_get_PlanningUnits","title":"Function to create square or heaxagonal planning units for your area of interest. — splnr_get_PlanningUnits","text":"code takes bbox limits important. output inherits crs sf object ensure correct projection needs code assumes Planning Unit whose centroids land removed. approximates > 50% PU landward.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_PlanningUnits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create square or heaxagonal planning units for your area of interest. — splnr_get_PlanningUnits","text":"","code":"splnr_get_PlanningUnits(   Bndry,   InnerB,   CellArea = 1000,   Shape = \"hexagon\",   inverse = FALSE )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_PlanningUnits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create square or heaxagonal planning units for your area of interest. — splnr_get_PlanningUnits","text":"Bndry sf polygon object outlines limits study area. InnerB sf multipolygon object contains areas (ie land) wish remove grid. CellArea area km wish resultant Planning Units . Shape Hexagon Square inverse invert InnerB keep areas within InnerB","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_PlanningUnits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create square or heaxagonal planning units for your area of interest. — splnr_get_PlanningUnits","text":"sf object planning units","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_PlanningUnits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to create square or heaxagonal planning units for your area of interest. — splnr_get_PlanningUnits","text":"example options hexagonal PU_size PU_size <- 5240 # km2 (~1 deg equator) PU_size <- 2620 # km2 (~0.5 deg equator) PU_size <- 669.9 # km2 (~0.25 deg equator) Written Jason Everett (UQ/UNSW/CSIRO) Written: 15 December 2020 Updated: 8th April 2022","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_PlanningUnits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create square or heaxagonal planning units for your area of interest. — splnr_get_PlanningUnits","text":"","code":"dat_bndry_moll <- dat_bndry %>% sf::st_transform(\"ESRI:54009\") landmass <- rnaturalearth::ne_countries(returnclass = \"sf\") %>% sf::st_transform(\"ESRI:54009\") PUs <- splnr_get_PlanningUnits(dat_bndry_moll, landmass, CellArea = 10000, Shape = \"hexagon\") ggplot2::ggplot() +   ggplot2::geom_sf(data = dat_bndry_moll, colour = \"blue\", fill = NA) +   ggplot2::geom_sf(data = PUs, colour = \"black\", fill = NA)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_TargetsIA.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Inverse Area Targets — splnr_get_TargetsIA","title":"Calculate Inverse Area Targets — splnr_get_TargetsIA","text":"function takes min (target_min) max (target_max) target range calculates inverse area target feature based areal coverage.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_TargetsIA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Inverse Area Targets — splnr_get_TargetsIA","text":"","code":"splnr_get_TargetsIA(df, target_min, target_max)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_TargetsIA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Inverse Area Targets — splnr_get_TargetsIA","text":"df sf dataframe features calculate target_min minimum target inverse area target_max maximum target inverse area","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_TargetsIA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Inverse Area Targets — splnr_get_TargetsIA","text":"sf dataframe Inverse Area Targets added Target","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_TargetsIA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Inverse Area Targets — splnr_get_TargetsIA","text":"","code":"targets <- dat_species_prob %>%    splnr_get_TargetsIA(target_min = 0.3, target_max = 0.8)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_IUCNRedList.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Species to IUCN RedList — splnr_match_IUCNRedList","title":"Match Species to IUCN RedList — splnr_match_IUCNRedList","text":"First need API key, alphanumeric string provided IUCN need send every request; following function takes website, need fill form (might take 1-2 days receive key) rl_use_iucn() receive email API key, set environmental variable (MUST named IUCN_REDLIST_KEY) need re-step everytime restart R Sys.setenv(IUCN_REDLIST_KEY = \"\") add IUCN_REDLIST_KEY = \"\" .Renviron file permanently set Sys.getenv(\"IUCN_REDLIST_KEY\") #' check Evaluated DD: Data Deficient LC: Least Concern NT: Near Threatened VU: Vulnerable EN: Endangered CR: Critically Endangered EW: Extinct Wild EX: Extinct LRlc: Low risk – least concern LRnt: Low risk – near threatened LRcd: Low risk - conservation dependent Categories care cate <- c(\"EX\",\"EW\",\"CR\",\"EN\",\"VU\")","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_IUCNRedList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Species to IUCN RedList — splnr_match_IUCNRedList","text":"","code":"splnr_match_IUCNRedList(df, species_col = \"Species\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_IUCNRedList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Species to IUCN RedList — splnr_match_IUCNRedList","text":"df dataframe containing species matched IUCN redlist species_col string name column containting species name","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_IUCNRedList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Species to IUCN RedList — splnr_match_IUCNRedList","text":"dataframe additional column IUCN_Category","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_IUCNRedList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match Species to IUCN RedList — splnr_match_IUCNRedList","text":"","code":"if (FALSE) { df <- data.frame(Species = c(\"Diomedea exulans\", \"Hippocampus kuda\", \"Squatina squatina\")) %>% splnr_match_IUCNRedList() }"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Substitute numbers for all_names in regionalisations — splnr_match_names","title":"Substitute numbers for all_names in regionalisations — splnr_match_names","text":"Many regionalisations numeric values teh shape files correpond vector names. provide function quickly replace numbers names.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Substitute numbers for all_names in regionalisations — splnr_match_names","text":"","code":"splnr_match_names(dat, nam)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Substitute numbers for all_names in regionalisations — splnr_match_names","text":"dat sf data frame one column numeric/integer corresponding nam nam character vector names corresponding numeric column dat","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Substitute numbers for all_names in regionalisations — splnr_match_names","text":"sf dataframe numeric regionalisations substituted category names","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_MPAs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MPAs — splnr_plot_MPAs","title":"Plot MPAs — splnr_plot_MPAs","text":"Plot MPAs","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_MPAs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MPAs — splnr_plot_MPAs","text":"","code":"splnr_plot_MPAs(df, landmass)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_MPAs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MPAs — splnr_plot_MPAs","text":"df sf object marine protected areas landmass sf object land polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_MPAs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MPAs — splnr_plot_MPAs","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_PUs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Planning Units — splnr_plot_PUs","title":"Plot Planning Units — splnr_plot_PUs","text":"Plot Planning Units","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_PUs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Planning Units — splnr_plot_PUs","text":"","code":"splnr_plot_PUs(PlanUnits, landmass = NA)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_PUs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Planning Units — splnr_plot_PUs","text":"PlanUnits Planning Units sf object landmass sf object land polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_PUs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Planning Units — splnr_plot_PUs","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_Solution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot prioritizr solution — splnr_plot_Solution","title":"Plot prioritizr solution — splnr_plot_Solution","text":"Plot prioritizr solution","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_Solution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot prioritizr solution — splnr_plot_Solution","text":"","code":"splnr_plot_Solution(soln, PlanUnits, landmass = NA)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_Solution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot prioritizr solution — splnr_plot_Solution","text":"soln prioritizr solution PlanUnits Planning Units sf object landmass sf object land polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_Solution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot prioritizr solution — splnr_plot_Solution","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_Solution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot prioritizr solution — splnr_plot_Solution","text":"","code":"dat_soln %>%     splnr_plot_Solution(dat_soln)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot solution comparison — splnr_plot_comparison","title":"Plot solution comparison — splnr_plot_comparison","text":"Plot solution comparison","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot solution comparison — splnr_plot_comparison","text":"","code":"splnr_plot_comparison(soln1, soln2, landmass = NA)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot solution comparison — splnr_plot_comparison","text":"soln1 first prioritizr solution soln2 second prioritizr solution landmass sf object land polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot solution comparison — splnr_plot_comparison","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot solution comparison — splnr_plot_comparison","text":"","code":"splnr_plot_comparison(dat_soln, dat_soln2)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_cost.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cost — splnr_plot_cost","title":"Plot cost — splnr_plot_cost","text":"Plot cost","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_cost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cost — splnr_plot_cost","text":"","code":"splnr_plot_cost(Cost, Cost_name = \"Cost\", landmass = NA)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_cost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cost — splnr_plot_cost","text":"Cost sf object cost prioritizr Cost_name Name cost column landmass sf object land polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_cost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot cost — splnr_plot_cost","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_cost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot cost — splnr_plot_cost","text":"","code":"dat_soln %>%   dplyr::mutate(Cost = runif(n = dim(.)[[1]])) %>%   splnr_plot_cost()"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_featureNo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot number of features — splnr_plot_featureNo","title":"Plot number of features — splnr_plot_featureNo","text":"Plot number features","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_featureNo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot number of features — splnr_plot_featureNo","text":"","code":"splnr_plot_featureNo(df, landmass = NA)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_featureNo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot number of features — splnr_plot_featureNo","text":"df sf object features landmass sf object land polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_featureNo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot number of features — splnr_plot_featureNo","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_featureNo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot number of features — splnr_plot_featureNo","text":"","code":"splnr_plot_featureNo(dat_species_bin)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_longhurst.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Longhurst Provinces — splnr_plot_longhurst","title":"Plot Longhurst Provinces — splnr_plot_longhurst","text":"Plot Longhurst Provinces","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_longhurst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Longhurst Provinces — splnr_plot_longhurst","text":"","code":"splnr_plot_longhurst(PlanUnits, landmass)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_longhurst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Longhurst Provinces — splnr_plot_longhurst","text":"PlanUnits Planning Units sf object landmass sf object land polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_longhurst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Longhurst Provinces — splnr_plot_longhurst","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_replace_NAs.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove NAs from spatial data using nearest neighbour — splnr_replace_NAs","title":"Remove NAs from spatial data using nearest neighbour — splnr_replace_NAs","text":"Remove NAs spatial data using nearest neighbour","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_replace_NAs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove NAs from spatial data using nearest neighbour — splnr_replace_NAs","text":"","code":"splnr_replace_NAs(df, vari)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_replace_NAs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove NAs from spatial data using nearest neighbour — splnr_replace_NAs","text":"df sf dataframe vari Variable remove NAs ","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_replace_NAs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove NAs from spatial data using nearest neighbour — splnr_replace_NAs","text":"sf object NAs replaced nearest neighbour","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_replace_NAs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove NAs from spatial data using nearest neighbour — splnr_replace_NAs","text":"","code":"df <- dat_species_prob %>%     splnr_replace_NAs(\"Spp2\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_scale_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale spatial layers to between 0 and 1 — splnr_scale_01","title":"Scale spatial layers to between 0 and 1 — splnr_scale_01","text":"Scale spatial layers 0 1","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_scale_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale spatial layers to between 0 and 1 — splnr_scale_01","text":"","code":"splnr_scale_01(dat, col_name)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_scale_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale spatial layers to between 0 and 1 — splnr_scale_01","text":"dat sf dataframe col_name Name column scale","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_scale_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale spatial layers to between 0 and 1 — splnr_scale_01","text":"sf dataframe","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_scale_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale spatial layers to between 0 and 1 — splnr_scale_01","text":"","code":"df <- dat_species_prob %>%     dplyr::mutate(Spp1 = Spp1 * 100) %>%     splnr_scale_01(col_name = \"Spp1\")"}]
