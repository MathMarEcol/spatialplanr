[{"path":"https://mathmarecol.github.io/spatialplanr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Jason D. Everett Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"A Basic Spatial Planning Workflow","text":"code written simplify process running prioritizr analysis given region. still work progress feel free submit pull requests new features code improvements.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"set-user-parameters","dir":"Articles","previous_headings":"Overview","what":"Set user parameters","title":"A Basic Spatial Planning Workflow","text":"can set region defined splnr_get_PlanningUnits. can also define region square boundaries need. Set shape area planning unit square kilometres. Choose CRS analysis","code":"Region <- \"Coral Sea\" # \"Australia\" Type <- \"Oceans\" # \"EEZ\" # Region <- c(xmin = 150, xmax = 160, ymin = -40, ymax = -30) Shape <- \"Hexagon\" # \"Shape of PUs PU_size <- 10000 # km2 cCRS <- \"+proj=moll +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m no_defs\" # Mollweide"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"analysis-region","dir":"Articles","previous_headings":"Overview","what":"Analysis Region","title":"A Basic Spatial Planning Workflow","text":"Start analysis defining region setting planning units. Get boundary chosen region. Get land boundaries remove overlap. object “landmass” represents land mass removed (inverse = FALSE)","code":"Bndry <- splnr_get_Boundary(Region, Type, cCRS) landmass <- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\") %>%   sf::st_transform(cCRS)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"create-planning-units","dir":"Articles","previous_headings":"Overview","what":"Create Planning Units","title":"A Basic Spatial Planning Workflow","text":"can check PUs look like","code":"PUs <- splnr_get_PlanningUnits(Bndry, landmass, PU_size, Shape) (ggPU <- splnr_plot_PUs(PUs, landmass)) # Plot Planning Units"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"get-the-features","dir":"Articles","previous_headings":"Overview","what":"Get the features","title":"A Basic Spatial Planning Workflow","text":"example, use small subset charismatic megafauna species Coral Sea inform conservation plan. filtered Aquamaps (Aquamaps.org) species distribution models study area following species: species chosen based importance region represent example visualization purposes. Note: structure tribbleabove required downstream plotting. Common denotes common name species, Scientific scientific name format used Aquamaps, Category category species belongs Class represents importance species conservation plan.","code":"Dict <- tibble::tribble(   ~Common, ~Scientific, ~Category, ~Class,   \"Green sea turtle\", \"Chelonia_mydas\", \"Reptiles\", \"important\",   \"Loggerhead sea turtle\", \"Caretta_caretta\", \"Reptiles\", \"important\",   \"Hawksbill sea turtle\", \"Eretmochelys_imbricata\", \"Reptiles\", \"important\",   \"Olive ridley sea turtle\", \"Lepidochelys_olivacea\", \"Reptiles\", \"important\",   \"Saltwater crocodile\", \"Crocodylus_porosus\", \"Reptiles\", \"important\",   \"Humpback whale\", \"Megaptera_novaeangliae\", \"Mammals\", \"representative\",   \"Common Minke whale\", \"Balaenoptera_acutorostrata\", \"Mammals\", \"representative\",   \"Dugong\", \"Dugong_dugon\", \"Mammals\", \"important\",   \"Grey nurse shark\", \"Carcharias_taurus\", \"Sharks and rays\", \"important\",   \"Tiger shark\", \"Galeocerdo_cuvier\", \"Sharks and rays\", \"important\",   \"Great hammerhead shark\", \"Sphyrna_mokarran\", \"Sharks and rays\", \"representative\",   \"Giant oceanic manta ray\", \"Mobula_birostris\", \"Sharks and rays\", \"important\",   \"Reef manta ray\", \"Mobula_alfredi\", \"Sharks and rays\", \"important\",   \"Whitetip reef shark\", \"Triaenodon_obesus\", \"Sharks and rays\", \"important\",   \"Red-footed booby\", \"Sula_sula\", \"Birds\", \"important\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"convert-the-probabilities-to-binary-data","dir":"Articles","previous_headings":"Overview > Get the features","what":"Convert the probabilities to binary data","title":"A Basic Spatial Planning Workflow","text":"can now look feature data used spatial plan individually calling splnr_plot_binFeature(), example see binary habitat suitability map Green sea turtles:  suitable habitat Green sea turtles predicted Aquamaps restricted cells close coast. now compare predicted suitable habitat Humpback whales, can see fairly ubiquitous across whole Coral Sea.  example, reason classified species either representative suitable habitat wide-ranging within study region important restricted number cells. get better idea overall distribution used features, can also plot number features suitable habitat within planning unit study region.","code":"datEx_species_bin <- spDataFiltered %>%   dplyr::as_tibble() %>%   dplyr::mutate(dplyr::across(     -dplyr::any_of(c(\"cellID\", \"geometry\")), # Don't apply to geometry and cellID     ~ dplyr::case_when(       . >= 0.5 ~ 1,       . < 0.5 ~ 0,       is.na(.data) ~ 0     )   )) %>%   sf::st_as_sf() (ggFeature1 <- splnr_plot_binFeature(datEx_species_bin, datEx_species_bin$Chelonia_mydas, PlanUnits = PUs, landmass)) (ggFeature <- splnr_plot_binFeature(datEx_species_bin, datEx_species_bin$Megaptera_novaeangliae, PlanUnits = PUs, landmass = landmass)) (ggFeatNo <- splnr_plot_featureNo(datEx_species_bin))"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"prepare-data-for-prioritisation","dir":"Articles","previous_headings":"Overview > Get the features","what":"Prepare Data for prioritisation","title":"A Basic Spatial Planning Workflow","text":"downstream spatial prioritization also need extract names features pass prioritizr. also create sf object contains information needed prioritization.","code":"col_name <- spDataFiltered %>%   sf::st_drop_geometry() %>%   dplyr::select(-\"cellID\") %>%   colnames() out_sf <- datEx_species_bin"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"add-cost","dir":"Articles","previous_headings":"Overview > Get the features > Prepare Data for prioritisation","what":"Add Cost","title":"A Basic Spatial Planning Workflow","text":"example, use minimum set objective function, aims minimize cost whilst meeting conservation targets. add area-based cost include little area possible spatial plan whilst meeting conservation targets. , planning units assigned equal cost 1.","code":"out_sf$Cost_None <- rep(1, 397) (ggCost <- splnr_plot_cost(out_sf, Cost_name = \"Cost_None\", plotTitle = \"Cost (Area)\"))"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"set-targets","dir":"Articles","previous_headings":"Overview > Get the features > Prepare Data for prioritisation","what":"Set Targets","title":"A Basic Spatial Planning Workflow","text":"shown previously, assigned conservation features class reflecting importance planning region. Conservation targets assigned target based class, case 30% suitable habitat important 10% representative features. Note: assigned classes targets based ecological information chosen visualization purposes.","code":"target <- Dict %>%   dplyr::mutate(target = dplyr::if_else(Class == \"important\", 30 / 100, 10 / 100))"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"set-up-conservation-problem","dir":"Articles","previous_headings":"Overview > Get the features","what":"Set up conservation problem","title":"A Basic Spatial Planning Workflow","text":"","code":"datEx_problem <- prioritizr::problem(out_sf, col_name, \"Cost_None\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(target$target) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"solve-the-conservation-problem","dir":"Articles","previous_headings":"Overview > Get the features","what":"Solve the conservation problem","title":"A Basic Spatial Planning Workflow","text":"","code":"datEx_soln <- datEx_problem %>%   prioritizr::solve.ConservationProblem()"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"visualize-output","dir":"Articles","previous_headings":"Overview > Get the features","what":"Visualize Output","title":"A Basic Spatial Planning Workflow","text":"different ways visualize output prioritization can loosely grouped three categories: + Visualization solution + Visualization targets + Visualization importance scores","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"visualization-of-the-solution","dir":"Articles","previous_headings":"Overview > Get the features > Visualize Output","what":"Visualization of the solution","title":"A Basic Spatial Planning Workflow","text":"plot shows optimal solution planning region meets selected targets chosen features smallest area possible. categorical map displays, planning units selected important meeting conservation targets (dark blue) selected (light blue). can also done overlay cost show solution avoids highly costly areas:  Note: example, cost equal planning units.","code":"(ggSoln <- splnr_plot_Solution(datEx_soln, PUs, landmass)) (ggCostOverlay <- splnr_plot_costOverlay(soln = datEx_soln, Cost = NA, Cost_name = \"Cost_None\", landmass))"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"visualization-of-targets","dir":"Articles","previous_headings":"Overview > Get the features > Visualize Output","what":"Visualization of targets","title":"A Basic Spatial Planning Workflow","text":"visualize well targets met, first need extract much suitable habitat feature selected spatial plan. also includes potential incidental coverage feature included spatial plan can still found planning region.  circular bar plot, one additional step data preparation needs done.","code":"dfTarget <- splnr_prepTargetData(datEx_soln, datEx_problem, datEx_species_bin,   Dict = Dict, Category = NA,   dataCol = \"Scientific\",   climsmart = FALSE, solnCol = \"solution_1\" )  (ggTarget <- splnr_plot_targets(dfTarget, nr = 1, setTarget = 30, plotTitle = \"Target: \")) dfTargetCirc <- dfTarget %>%   dplyr::select(\"feature\", \"value\", \"group\") %>%   na.omit()  colors <- c(   \"important\" = \"darkgreen\",   \"representative\" = \"darkred\" ) legends <- c(\"Important\", \"Representative\")  (ggCircTarg <- splnr_plot_circBplot(df = dfTargetCirc, legend_list = legends, legend_color = colors, impTarget = 30, repTarget = 10))"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"visualization-of-importance-scores","dir":"Articles","previous_headings":"Overview > Get the features > Visualize Output","what":"Visualization of importance scores","title":"A Basic Spatial Planning Workflow","text":"Importance scores can help assess relative importance individual selected planning unit spatial plan (information, see https://prioritizr.net/reference/importance.html) , use two different importance scores, Ferrier Score Rarity Weighted Richness.  example, scores label similar -coastal- planning units important spatial plan.","code":"ggFerrier <- splnr_plot_impScoreFerrierPlot(datEx_soln, datEx_problem) ggRWR <- splnr_plot_impScoreRWRPlot(datEx_soln, datEx_problem)  (ggScores <- patchwork::wrap_plots(ggFerrier + ggRWR))"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"comparing-spatial-plans","dir":"Articles","previous_headings":"Overview > Get the features","what":"Comparing Spatial Plans","title":"A Basic Spatial Planning Workflow","text":"Sometimes can useful direct comparison two spatial plans. show achieve package, first need second conservation problem resulting solution. , second spatial plan include already existing marine protected areas area (https://www.protectedplanet.net/en/thematic-areas/wdpa?tab=WDPA) following characteristics: * Status = c(“Designated”, “Established”, “Inscribed”) * Designation Type = c(“National”, “Regional”, “International”, “Applicable”) * IUCN Category = c(“Ia”, “Ib”, “II”, “III”, “IV”)  also include targets based IUCN categories prioritise species IUCN status : Vulnerable Endangered Critically Endangered Extinct Wild Extinct assign 30% target species within categories. species fall categories receive inverse area target, species greater area suitable habitat assigned lower target. Note: Accessing IUCN database requires login token rl_use_iucn() needs added environment using Sys.setenv(IUCN_REDLIST_KEY = \"[Token]\").","code":"(ggMPA <- splnr_plot_MPAs(MPAsCoralSea, landmass = landmass)) # Species <- gsub(\"_\", \" \", col_name) #to transform Aquamaps species names to IUCN species names # dfSpecies <- data.frame(Species) # # minTarget = 0.1 # maxTarget = 0.2 # # Targets <- splnr_get_TargetsIA(datEx_species_bin, minTarget, maxTarget) #inverse area target # # speciesCol <- \"Species\" # Targets <- Targets %>% #   splnr_match_IUCNRedList() %>% # Add RL data to the df #   dplyr::mutate(Target = dplyr::case_when(IUCN_Category %in% c(\"EX\",\"EW\",\"CR\",\"EN\",\"VU\") ~ 0.3, #                                           TRUE ~ Targets$Target))  Targets <- IUCN_IA_Targets"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"set-up-second-conservation-problem","dir":"Articles","previous_headings":"Overview > Get the features > Comparing Spatial Plans","what":"Set up second conservation problem","title":"A Basic Spatial Planning Workflow","text":"","code":"datEx_problem2 <- prioritizr::problem(out_sf, col_name, \"Cost_None\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(Targets$Target) %>%   prioritizr::add_locked_in_constraints(as.logical(MPAsCoralSea$wdpa)) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  # Add a solution object datEx_soln2 <- datEx_problem2 %>%   prioritizr::solve.ConservationProblem()  (ggSoln2 <- splnr_plot_Solution(datEx_soln2, PUs, landmass))"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"visualize-comparison","dir":"Articles","previous_headings":"Overview > Get the features > Comparing Spatial Plans","what":"Visualize comparison","title":"A Basic Spatial Planning Workflow","text":"plot shows first solution (without current MPAs) differs second solution (including current MPAs. categorical map displays, planning units selected solution 2 solution 1 (red), solution 1 solution 2 (blue), selected solutions (grey).  correlation matrix shows similarity Cohen’s Kappa correlation solution 1 solution 2.","code":"(ggComp <- splnr_plot_comparison(datEx_soln, datEx_soln2, landmass, PlanUnits = PUs)) CorrMat <- splnr_prepKappaCorrData(list(datEx_soln, datEx_soln2), name_sol = c(\"soln1\", \"soln2\")) (ggCorr <- splnr_plot_CorrMat(CorrMat, AxisLabels = c(\"Solution 1\", \"Solution 2\")))"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"plotting-selection-frequency","dir":"Articles","previous_headings":"Overview > Get the features","what":"Plotting selection frequency","title":"A Basic Spatial Planning Workflow","text":"Sometimes multiple spatial plans generated, interesting many times planning unit selected across array solutions. demonstrate can done using package, first create array (= portfolio) solutions. One example using portfolio","code":"datEx_soln_portfolio <- datEx_problem %>%   prioritizr::add_cuts_portfolio(5) %>% # create conservation problem that contains a portfolio of solutions   prioritizr::solve.ConservationProblem()  selFreq <- datEx_soln_portfolio %>% # calculate selection frequency   sf::st_drop_geometry() %>%   dplyr::mutate(selFreq = as.factor(rowSums(dplyr::select(., dplyr::starts_with(\"solution_\"))))) %>%   sf::st_as_sf(geometry = datEx_soln_portfolio$geometry) %>%   dplyr::select(selFreq)  (ggselFreq <- splnr_plot_selectionFreq(selFreq))"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"aquamaps","dir":"Articles","previous_headings":"Overview > Get the features","what":"Aquamaps","title":"A Basic Spatial Planning Workflow","text":"Get aquamaps data species region Set depth range probability cutoff (CO) extracting AquaMaps data.","code":"# MinDepth <- 0 # MaxDepth <- 200 # # AQM <- splnr_get_AquaMaps(PUs, MinDepth, MaxDepth)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"geomorphic-features","dir":"Articles","previous_headings":"Overview > Get the features","what":"Geomorphic features","title":"A Basic Spatial Planning Workflow","text":"Add geomorphic features existing features object.","code":"# GeoMorph <- splnr_get_Geomorphic(PUs, Feature = c(\"Shelf\", \"Ridge\", \"Plateau\", \"Seamount\"))"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"apply-cutoffs","dir":"Articles","previous_headings":"Overview > Get the features","what":"Apply cutoffs","title":"A Basic Spatial Planning Workflow","text":"Add geomorphic features existing features object.","code":"# Cutoffs <- 0.5 # AQM_bin <- splnr_Apply_Cutoffs(AQM, Cutoffs) # # Cutoffs <- c(Shelf = 0.01, Ridge = 0.2, Plateau = 0.1, Seamount = 0.3) # GeoMorph_bin <- splnr_Apply_Cutoffs(GeoMorph, Cutoffs)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"join-all-features-together-","dir":"Articles","previous_headings":"Overview > Get the features","what":"Join all features together.","title":"A Basic Spatial Planning Workflow","text":"","code":"# features <- GeoMorph_bin %>% #   dplyr::left_join(AQM_bin %>% sf::st_drop_geometry(), by = \"cellID\") # # (ggFeatureNo <- splnr_plot_FeatureNo(features, landmass)) # Plot Number of features"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"longhurst-provinces","dir":"Articles","previous_headings":"Overview > Get the features","what":"Longhurst Provinces","title":"A Basic Spatial Planning Workflow","text":"can also assign Longhurst Province PU set targets individually province. simply demonstrate , implement spatial plan.","code":"# Longhurst <- splnr_Match_Longhurst(PUs) # (ggLong <- splnr_plot_Longhurst(Longhurst, landmass))"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"get-locked-in-areas","dir":"Articles","previous_headings":"Overview > Get the features","what":"Get locked in areas","title":"A Basic Spatial Planning Workflow","text":"","code":"# LockedIn <- splnr_get_MPAs(PUs, \"Australia\") %>% #   splnr_Apply_Cutoffs(0.5) %>% #   dplyr::mutate(wdpa = as.logical(wdpa)) # (ggMPA <- splnr_plot_MPAs(LockedIn, landmass)) # Plot Locked in areas"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"get-fisheries-cost","dir":"Articles","previous_headings":"Overview","what":"Get Fisheries cost","title":"A Basic Spatial Planning Workflow","text":"","code":"# Cost <- splnr_get_FishCost(PUs, group = \"all\") # (ggCost <- splnr_plot_Cost(Cost, landmass)) # Plot cost"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"identical-fixed-targets","dir":"Articles","previous_headings":"Overview > Set up targets","what":"Identical fixed targets","title":"A Basic Spatial Planning Workflow","text":"","code":"# Targets <- data.frame(Target = 0.2)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"inverse-area-targets","dir":"Articles","previous_headings":"Overview > Set up targets","what":"Inverse area targets","title":"A Basic Spatial Planning Workflow","text":"Set minimum maximum limits inverse area targets","code":"# minTarget = 0.2 # maxTarget = 0.5 # # Targets <- splnr_get_TargetsIA(features, minTarget, maxTarget)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"add-different-targets-for-iucn-redlist-categories","dir":"Articles","previous_headings":"Overview > Set up targets","what":"Add different targets for IUCN RedList categories","title":"A Basic Spatial Planning Workflow","text":"run code need sign IUCN RedList token. Start running rredlist::rl_use_iucn().","code":"# speciesCol <- \"Species\" # Targets <- Targets %>% #   splnr_Match_IUCNRedList(speciesCol) %>% # Add RL data to the df #   dplyr::mutate(Target = dplyr::case_when(IUCN_Category %in% c(\"EX\",\"EW\",\"CR\",\"EN\",\"VU\") ~ 1, # TRUE ~ Targets$Target))"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"get-the-list-of-features","dir":"Articles","previous_headings":"Overview > Set up the planning problem","what":"Get the list of features","title":"A Basic Spatial Planning Workflow","text":"","code":"# feature_names <- features %>% #   sf::st_drop_geometry() %>% #   names() # # out_sf <- cbind(Cost, #                 LockedIn %>% sf::st_drop_geometry(), #                 features %>% sf::st_drop_geometry()) # # p1 <- prioritizr::problem(out_sf, feature_names, \"Cost\") %>% #   prioritizr::add_min_set_objective() %>% #   prioritizr::add_relative_targets(Targets$Target) %>% #   prioritizr::add_locked_in_constraints(\"wdpa\") %>% #   prioritizr::add_binary_decisions() %>% #   prioritizr::add_default_solver(verbose = FALSE)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"solve-the-planning-problem","dir":"Articles","previous_headings":"Overview","what":"Solve the planning problem","title":"A Basic Spatial Planning Workflow","text":"","code":"# s1 <- prioritizr::solve(p1)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"plotting","dir":"Articles","previous_headings":"Overview","what":"Plotting","title":"A Basic Spatial Planning Workflow","text":"","code":"# (ggSol <- splnr_plot_Solution(s1, PUs, landmass)) # Plot Solution  # gg <- patchwork::wrap_plots(list(ggPU, ggMPA, ggCost, ggFeatureNo, ggSol), ncol = 3)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"compare-2-solutions","dir":"Articles","previous_headings":"Overview","what":"Compare 2 solutions","title":"A Basic Spatial Planning Workflow","text":"run another problem/solution combo compare output original one. much lower target (30%), expect less area set aside.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"create-the-second-planning-problem","dir":"Articles","previous_headings":"Overview > Compare 2 solutions","what":"Create the second planning problem","title":"A Basic Spatial Planning Workflow","text":"","code":"# p2 <- prioritizr::problem(out_sf, feature_names, \"Cost\") %>% #   prioritizr::add_min_set_objective() %>% #   prioritizr::add_relative_targets(0.5) %>% #   prioritizr::add_locked_in_constraints(\"wdpa\") %>% #   prioritizr::add_binary_decisions() %>% #   prioritizr::add_default_solver(verbose = FALSE)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"solve-the-planning-problem-1","dir":"Articles","previous_headings":"Overview > Compare 2 solutions","what":"Solve the planning problem","title":"A Basic Spatial Planning Workflow","text":"","code":"# s2 <- prioritizr::solve(p2)"},{"path":"https://mathmarecol.github.io/spatialplanr/articles/spatialplanr.html","id":"plot-comparison","dir":"Articles","previous_headings":"Overview > Compare 2 solutions","what":"Plot comparison","title":"A Basic Spatial Planning Workflow","text":"","code":"# gg <- splnr_plot_Comparison(s1, s2, landmass)"},{"path":"https://mathmarecol.github.io/spatialplanr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jason D. Everett. Author, maintainer. Sandra Neubert. Author.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Everett J, Neubert S (2023). spatialplanr: Help files prioritzr Spatial Planning projects. R package version 0.1.0, https://github.com/MathMarEcol/spatialplanr.","code":"@Manual{,   title = {spatialplanr: Help files for prioritzr Spatial Planning projects},   author = {Jason D. Everett and Sandra Neubert},   year = {2023},   note = {R package version 0.1.0},   url = {https://github.com/MathMarEcol/spatialplanr}, }"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Help files for prioritzr Spatial Planning projects","text":"repository specific work Mathematical Marine Ecology Lab University Queensland. intended used anyone outside MME Lab without permission Professor Anthony Richardson. code written simplify process running prioritizr analysis given region use workflows data MME Lab. still work progress feel free submit pull requests new features code improvements.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Help files for prioritzr Spatial Planning projects","text":"aware package early stages development. Functions documentation complete installing moment risk. still interested, can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"https://github.com/MathMarEcol/spatialplanr\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/Category_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Category vector — Category_vec","title":"Category vector — Category_vec","text":"tibble containing specific grouping features","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/Category_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Category vector — Category_vec","text":"","code":"Category_vec"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/Category_vec.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Category vector — Category_vec","text":"Category_vec data frame XXXX rows XXX columns: feature features available spatial prioritisation category categories features","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/Category_vec.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Category vector — Category_vec","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/Category_vec2.html","id":null,"dir":"Reference","previous_headings":"","what":"Category vector — Category_vec2","title":"Category vector — Category_vec2","text":"tibble containing specific grouping features","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/Category_vec2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Category vector — Category_vec2","text":"","code":"Category_vec2"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/Category_vec2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Category vector — Category_vec2","text":"Category_vec2 data frame XXXX rows XXX columns: feature features available spatial prioritisation category categories features","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/Category_vec2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Category vector — Category_vec2","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/CoralSeaVelocity.html","id":null,"dir":"Reference","previous_headings":"","what":"Example climate velocity for the example region of the coral sea — CoralSeaVelocity","title":"Example climate velocity for the example region of the coral sea — CoralSeaVelocity","text":"tsf file containing climate velocity (SSP5-8.5) coral sea","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/CoralSeaVelocity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example climate velocity for the example region of the coral sea — CoralSeaVelocity","text":"","code":"CoralSeaVelocity"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/reference/CoralSeaVelocity.html","id":"coralseavelocity","dir":"Reference","previous_headings":"","what":"CoralSeaVelocity","title":"Example climate velocity for the example region of the coral sea — CoralSeaVelocity","text":"data frame 397 rows 3 columns: cellID cell ID planning units vocMagg_transformed Climate velocity column geometry Geometry column sf object","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/CoralSeaVelocity.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example climate velocity for the example region of the coral sea — CoralSeaVelocity","text":"https://www.iucnredlist.org/","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/IUCN_IA_Targets.html","id":null,"dir":"Reference","previous_headings":"","what":"IUCN and Inverse Area based Targets for Aquamaps example species — IUCN_IA_Targets","title":"IUCN and Inverse Area based Targets for Aquamaps example species — IUCN_IA_Targets","text":"tbl_df file containing IUCN IA targets selected species coral sea","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/IUCN_IA_Targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IUCN and Inverse Area based Targets for Aquamaps example species — IUCN_IA_Targets","text":"","code":"IUCN_IA_Targets"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/IUCN_IA_Targets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IUCN and Inverse Area based Targets for Aquamaps example species — IUCN_IA_Targets","text":"IUCN_IA_Targets data frame 15 rows 4 columns: Species Species names found IUCN database Area km2 total suitable habitat species Target Individual species-specific target IUCN_Category IUCN category species","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/IUCN_IA_Targets.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"IUCN and Inverse Area based Targets for Aquamaps example species — IUCN_IA_Targets","text":"https://www.iucnredlist.org/","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/MPAsCoralSea.html","id":null,"dir":"Reference","previous_headings":"","what":"Current MPAs of the Coral Sea — MPAsCoralSea","title":"Current MPAs of the Coral Sea — MPAsCoralSea","text":"sf file containing current marine protected areas coral sea","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/MPAsCoralSea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Current MPAs of the Coral Sea — MPAsCoralSea","text":"","code":"MPAsCoralSea"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/MPAsCoralSea.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Current MPAs of the Coral Sea — MPAsCoralSea","text":"MPAsCoralSea data frame 397 rows 17 columns: wdpa binary vector denoting presence absence current marine protected area cellID cell ID planning units","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/MPAsCoralSea.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Current MPAs of the Coral Sea — MPAsCoralSea","text":"https://www.protectedplanet.net/en/thematic-areas/wdpa?tab=WDPA","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_PUs.html","id":null,"dir":"Reference","previous_headings":"","what":"Planning Units — dat_PUs","title":"Planning Units — dat_PUs","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_PUs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Planning Units — dat_PUs","text":"","code":"dat_PUs"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_PUs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Planning Units — dat_PUs","text":"dat_PUs data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_PUs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Planning Units — dat_PUs","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_bndry.html","id":null,"dir":"Reference","previous_headings":"","what":"Boundary of planning units — dat_bndry","title":"Boundary of planning units — dat_bndry","text":"sf dataframe planning units spatial prioritisation sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_bndry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boundary of planning units — dat_bndry","text":"","code":"dat_bndry  dat_bndry"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_bndry.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Boundary of planning units — dat_bndry","text":"dat_bndry data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column dat_bndry data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_bndry.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Boundary of planning units — dat_bndry","text":"\"Made data\" \"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_clim.html","id":null,"dir":"Reference","previous_headings":"","what":"Climate metric data — dat_clim","title":"Climate metric data — dat_clim","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_clim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Climate metric data — dat_clim","text":"","code":"dat_clim"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_clim.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Climate metric data — dat_clim","text":"dat_clim data frame 780 rows 3 columns: cellID ID number row (cell) dataset geometry sf geometry column metric climate metric information","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_clim.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Climate metric data — dat_clim","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_mpas.html","id":null,"dir":"Reference","previous_headings":"","what":"MPA Data — dat_mpas","title":"MPA Data — dat_mpas","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_mpas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MPA Data — dat_mpas","text":"","code":"dat_mpas"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_mpas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MPA Data — dat_mpas","text":"dat_mpas data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column wdpa binary MPA information (1: MPA)","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_mpas.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"MPA Data — dat_mpas","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_problem.html","id":null,"dir":"Reference","previous_headings":"","what":"' prioritizr Problem — dat_problem","title":"' prioritizr Problem — dat_problem","text":"conservation problem spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_problem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"' prioritizr Problem — dat_problem","text":"","code":"dat_problem"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_problem.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"' prioritizr Problem — dat_problem","text":"dat_problem class stores data, mathematical formula information needed run prioritisation: data list containing information cost features objective object specifying objective function used conservation problem","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_problem.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"' prioritizr Problem — dat_problem","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Regionalisation — dat_region","title":"Regionalisation — dat_region","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regionalisation — dat_region","text":"","code":"dat_region"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_region.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regionalisation — dat_region","text":"dat_region data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_region.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Regionalisation — dat_region","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln.html","id":null,"dir":"Reference","previous_headings":"","what":"prioritizr Solution — dat_soln","title":"prioritizr Solution — dat_soln","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prioritizr Solution — dat_soln","text":"","code":"dat_soln"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"prioritizr Solution — dat_soln","text":"dat_soln data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"prioritizr Solution — dat_soln","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln2.html","id":null,"dir":"Reference","previous_headings":"","what":"prioritizr Solution2 — dat_soln2","title":"prioritizr Solution2 — dat_soln2","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prioritizr Solution2 — dat_soln2","text":"","code":"dat_soln2"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"prioritizr Solution2 — dat_soln2","text":"dat_soln2 data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_soln2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"prioritizr Solution2 — dat_soln2","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_bin.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary Species Data — dat_species_bin","title":"Binary Species Data — dat_species_bin","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary Species Data — dat_species_bin","text":"","code":"dat_species_bin"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_bin.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Binary Species Data — dat_species_bin","text":"dat_species_bin data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_bin.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Binary Species Data — dat_species_bin","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_bin2.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary Species Data 2 — dat_species_bin2","title":"Binary Species Data 2 — dat_species_bin2","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_bin2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary Species Data 2 — dat_species_bin2","text":"","code":"dat_species_bin2"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_bin2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Binary Species Data 2 — dat_species_bin2","text":"dat_species_bin2 data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_bin2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Binary Species Data 2 — dat_species_bin2","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability Species Data — dat_species_prob","title":"Probability Species Data — dat_species_prob","text":"sf dataframe planning units spatial prioritisation","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability Species Data — dat_species_prob","text":"","code":"dat_species_prob"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_prob.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Probability Species Data — dat_species_prob","text":"dat_species_prob data frame XXXX rows XXX columns: cellID ID number row (cell) dataset geometry sf geometry column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/dat_species_prob.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Probability Species Data — dat_species_prob","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/spDataFiltered.html","id":null,"dir":"Reference","previous_headings":"","what":"Example.... — spDataFiltered","title":"Example.... — spDataFiltered","text":"Example....","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/spDataFiltered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example.... — spDataFiltered","text":"","code":"spDataFiltered"},{"path":[]},{"path":"https://mathmarecol.github.io/spatialplanr/reference/spDataFiltered.html","id":"spdatafiltered","dir":"Reference","previous_headings":"","what":"spDataFiltered","title":"Example.... — spDataFiltered","text":"data frame .....","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/spDataFiltered.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example.... — spDataFiltered","text":"\"Made data\"","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_CPA_CSapproach_assignTargets.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to assign targets for climate-priority-area approach — splnr_CPA_CSapproach_assignTargets","title":"Function to assign targets for climate-priority-area approach — splnr_CPA_CSapproach_assignTargets","text":"Function assign targets climate-priority-area approach","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_CPA_CSapproach_assignTargets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to assign targets for climate-priority-area approach — splnr_CPA_CSapproach_assignTargets","text":"","code":"splnr_CPA_CSapproach_assignTargets(   featuresDF,   targetsDF,   climateSmartDF,   refugiaTarget = 1 )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_CPA_CSapproach_assignTargets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to assign targets for climate-priority-area approach — splnr_CPA_CSapproach_assignTargets","text":"featuresDF feature sfobject column cellID targetsDF data.framewith list features \"feature\" column corresponding targets \"target\" column climateSmartDF sf object produced using function splnr_ClimatePriorityArea_CSapproach() refugiaTarget target assigned climate-smart areas","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_CPA_CSapproach_assignTargets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to assign targets for climate-priority-area approach — splnr_CPA_CSapproach_assignTargets","text":"new sf dataframe cutoffs applied.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_CPA_CSapproach_assignTargets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to assign targets for climate-priority-area approach — splnr_CPA_CSapproach_assignTargets","text":"","code":"Features <- dat_species_bin %>%   dplyr::select(-\"cellID\")  target <- Features %>%   sf::st_drop_geometry() %>%   colnames() %>%   data.frame() %>%   setNames(c(\"feature\")) %>%   dplyr::mutate(target = 0.3)  metric_df <- dat_clim  dat_species_binDF <- dat_species_bin %>%   sf::st_drop_geometry()  out_sf <- splnr_ClimatePriorityArea_CSapproach(   featuresDF = dat_species_bin,   percentile = 5, metricDF = metric_df, direction = 1 )  target <- splnr_CPA_CSapproach_assignTargets(   featuresDF = Features,   targetsDF = target,   climateSmartDF = out_sf,   refugiaTarget = 1 )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_ClimatePriorityArea_CSapproach.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to split the feature data into climate-smart (CS) and non-climate-smart (NCS) areas depending on the percentile chosen by the user. — splnr_ClimatePriorityArea_CSapproach","title":"Function to split the feature data into climate-smart (CS) and non-climate-smart (NCS) areas depending on the percentile chosen by the user. — splnr_ClimatePriorityArea_CSapproach","text":"Function split feature data climate-smart (CS) non-climate-smart (NCS) areas depending percentile chosen user.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_ClimatePriorityArea_CSapproach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to split the feature data into climate-smart (CS) and non-climate-smart (NCS) areas depending on the percentile chosen by the user. — splnr_ClimatePriorityArea_CSapproach","text":"","code":"splnr_ClimatePriorityArea_CSapproach(   featuresDF,   percentile,   metricDF,   direction )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_ClimatePriorityArea_CSapproach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to split the feature data into climate-smart (CS) and non-climate-smart (NCS) areas depending on the percentile chosen by the user. — splnr_ClimatePriorityArea_CSapproach","text":"featuresDF feature sf object column cellID percentile cut-threshold determining whether area climate priority area (e.g., lower 35th percentile warming upper 65th percentile acidification). Note percentile lower limit threshold. metricDF climate metric data.frame 'metric' column name metric values per planning unit. also column cellID direction direction = 1, metric values low (least climate-smart) high (climate-smart). direction = -1, metric values high (least climate-smart) low (climate-smart).","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_ClimatePriorityArea_CSapproach.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to split the feature data into climate-smart (CS) and non-climate-smart (NCS) areas depending on the percentile chosen by the user. — splnr_ClimatePriorityArea_CSapproach","text":"new sf dataframe cutoffs applied.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_ClimatePriorityArea_CSapproach.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to split the feature data into climate-smart (CS) and non-climate-smart (NCS) areas depending on the percentile chosen by the user. — splnr_ClimatePriorityArea_CSapproach","text":"","code":"metric_df <- dat_clim  dat_species_binDF <- dat_species_bin %>%   sf::st_drop_geometry()  out_sf <- splnr_ClimatePriorityArea_CSapproach(   featuresDF = dat_species_bin,   percentile = 5, metricDF = metric_df, direction = 1 )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_apply_cutoffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to apply cutoffs to feature data — splnr_apply_cutoffs","title":"Function to apply cutoffs to feature data — splnr_apply_cutoffs","text":"Function apply cutoffs feature data","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_apply_cutoffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to apply cutoffs to feature data — splnr_apply_cutoffs","text":"","code":"splnr_apply_cutoffs(features, Cutoffs, inverse = FALSE)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_apply_cutoffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to apply cutoffs to feature data — splnr_apply_cutoffs","text":"features sf dataframe feature information Cutoffs single value named vector cutoffs. inverse TRUE, values Cutoffs used. FALSE (default), values kept.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_apply_cutoffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to apply cutoffs to feature data — splnr_apply_cutoffs","text":"new sf dataframe cutoffs applied.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_apply_cutoffs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to apply cutoffs to feature data — splnr_apply_cutoffs","text":"","code":"df <- splnr_apply_cutoffs(dat_species_prob, Cutoffs = 0.5)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_arrangeFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure all features are in the same order. — splnr_arrangeFeatures","title":"Ensure all features are in the same order. — splnr_arrangeFeatures","text":"Ensure features order.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_arrangeFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure all features are in the same order. — splnr_arrangeFeatures","text":"","code":"splnr_arrangeFeatures(df)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_arrangeFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure all features are in the same order. — splnr_arrangeFeatures","text":"df sf object sort Lon Lat","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_arrangeFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure all features are in the same order. — splnr_arrangeFeatures","text":"sorted sf object additionl cellID column","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_arrangeFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure all features are in the same order. — splnr_arrangeFeatures","text":"","code":"df <- dat_species_prob %>%   splnr_arrangeFeatures() #> Warning: st_centroid assumes attributes are constant over geometries"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert2Pacific.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a world sf object to a Pacific-centred one\nDefaults to assuming Robinson projection — splnr_convert2Pacific","title":"Convert a world sf object to a Pacific-centred one\nDefaults to assuming Robinson projection — splnr_convert2Pacific","text":"Written Jason D. Everett UQ/CSIRO/UNSW Last edited 8th Sept 2021","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert2Pacific.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a world sf object to a Pacific-centred one\nDefaults to assuming Robinson projection — splnr_convert2Pacific","text":"","code":"splnr_convert2Pacific(   df,   buff = 0,   cCRS =     \"+proj=robin +lon_0=180 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert2Pacific.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a world sf object to a Pacific-centred one\nDefaults to assuming Robinson projection — splnr_convert2Pacific","text":"df sf dataframe buff buffer apply features cross merge cCRS crs use output.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert2Pacific.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a world sf object to a Pacific-centred one\nDefaults to assuming Robinson projection — splnr_convert2Pacific","text":"sf object Robinson projection","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert2Pacific.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a world sf object to a Pacific-centred one\nDefaults to assuming Robinson projection — splnr_convert2Pacific","text":"","code":"df_rob <- rnaturalearth::ne_coastline(returnclass = \"sf\") %>%   splnr_convert2Pacific() #> The legacy packages maptools, rgdal, and rgeos, underpinning the sp package, #> which was just loaded, will retire in October 2023. #> Please refer to R-spatial evolution reports for details, especially #> https://r-spatial.org/r/2023/05/15/evolution4.html. #> It may be desirable to make the sf package available; #> package maintainers should consider adding sf to Suggests:. #> The sp package is now running under evolution status 2 #>      (status 2 uses the sf package in place of rgdal) #> Warning: attribute variables are assumed to be spatially constant throughout all geometries"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_2PUs.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to interpolate data onto Planning Units — splnr_convert_2PUs","title":"Function to interpolate data onto Planning Units — splnr_convert_2PUs","text":"dataset needs raster vector format. input contains continuous data, output area-averaged mean planning unit. input binary, output proportion planning unit covered.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_2PUs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to interpolate data onto Planning Units — splnr_convert_2PUs","text":"","code":"splnr_convert_2PUs(dat, PlanUnits)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_2PUs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to interpolate data onto Planning Units — splnr_convert_2PUs","text":"dat Dataset filename dataset PlanUnits sf object Planning Units","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_2PUs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to interpolate data onto Planning Units — splnr_convert_2PUs","text":"sf object containing Planning Units feature.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_2PUs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to interpolate data onto Planning Units — splnr_convert_2PUs","text":"","code":"if (FALSE) { df <- splnr_convert_2PUs(dat, PlanUnits) }"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_regionalisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to interpolate regionalisation data onto Planning Units — splnr_convert_regionalisation","title":"Function to interpolate regionalisation data onto Planning Units — splnr_convert_regionalisation","text":"wrapper splnr_Convert2PUs() deals need processes layer seperately","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_regionalisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to interpolate regionalisation data onto Planning Units — splnr_convert_regionalisation","text":"","code":"splnr_convert_regionalisation(dat, PUs, cat_name = NA, col_name = NA)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_regionalisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to interpolate regionalisation data onto Planning Units — splnr_convert_regionalisation","text":"dat Dataset raster sf format. PUs sf object Planning Units cat_name character string categories regionalisation col_name name layer","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_regionalisation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to interpolate regionalisation data onto Planning Units — splnr_convert_regionalisation","text":"sf object containing Planning Units feature.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_regionalisation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to interpolate regionalisation data onto Planning Units — splnr_convert_regionalisation","text":"dataset needs raster vector format. input contains continuous data, output area-averaged mean planning unit. input binary, output proportion planning unit covered.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_convert_regionalisation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to interpolate regionalisation data onto Planning Units — splnr_convert_regionalisation","text":"","code":"if (FALSE) { df <- splnr_convert_regionalisation(dat, PUs) }"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_create_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for creating polygon — splnr_create_polygon","title":"Function for creating polygon — splnr_create_polygon","text":"Function creating polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_create_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for creating polygon — splnr_create_polygon","text":"","code":"splnr_create_polygon(x, cCRS = \"EPSG:4326\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_create_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for creating polygon — splnr_create_polygon","text":"x named vector lon/lat coordinates make sf polygon cCRS CRS use polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_create_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for creating polygon — splnr_create_polygon","text":"sf object polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_create_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for creating polygon — splnr_create_polygon","text":"","code":"splnr_create_polygon(x = dplyr::tibble(x = seq(-50, 50, by = 1), y = 120) %>%   dplyr::bind_rows(dplyr::tibble(x = 50, y = seq(120, 180, by = 1))) %>%   dplyr::bind_rows(dplyr::tibble(x = seq(50, -50, by = -1), y = 180)) %>%   dplyr::bind_rows(dplyr::tibble(x = -50, y = seq(150, 120, by = -1))))"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_Boundary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the boundary of the planning region. — splnr_get_Boundary","title":"Get the boundary of the planning region. — splnr_get_Boundary","text":"Get boundary planning region.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_Boundary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the boundary of the planning region. — splnr_get_Boundary","text":"","code":"splnr_get_Boundary(Limits, Type, cCRS = \"ESRI:54009\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_Boundary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the boundary of the planning region. — splnr_get_Boundary","text":"Limits limits boundary. can either 4 element numeric named vector (c(xmin = 150, xmax = 160, ymin = -40, ymax = -30)), vector ocean/sea names, vector EEZs., Type type Limits provided. Options \"Ocean\" \"EEZ\" cCRS CRS boundary returned ","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_Boundary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the boundary of the planning region. — splnr_get_Boundary","text":"boundary planning region","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_Boundary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the boundary of the planning region. — splnr_get_Boundary","text":"","code":"Bndry <- splnr_get_Boundary(\"North Atlantic Ocean\", \"Ocean\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_MPAs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get marine parks from the WDPA. — splnr_get_MPAs","title":"Get marine parks from the WDPA. — splnr_get_MPAs","text":"code wrapper wonderful wdpar package written Jeffrey O. Hanson. data interfaced planning units. sf object returned PU area covered selected marine protected areas.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_MPAs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get marine parks from the WDPA. — splnr_get_MPAs","text":"","code":"splnr_get_MPAs(   PlanUnits,   Countries,   Status = c(\"Designated\", \"Established\", \"Inscribed\"),   Desig = c(\"National\", \"Regional\", \"International\", \"Not Applicable\"),   Category = c(\"Ia\", \"Ib\", \"II\", \"III\", \"IV\") )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_MPAs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get marine parks from the WDPA. — splnr_get_MPAs","text":"PlanUnits Planning Units sf object Countries character vector countries extract MPAs Status status field WDPA provides information whether protected area established, designated, proposed time data submitted. Desig designation type category type protected area legally/officially designated proposed. Category Stores IUCN Protected Area Management Categories (recorded field IUCN_CAT) protected areas categories reported","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_MPAs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get marine parks from the WDPA. — splnr_get_MPAs","text":"sf object MPAs intersected planning units","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_MPAs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get marine parks from the WDPA. — splnr_get_MPAs","text":"","code":"dat <- splnr_get_MPAs(dat_PUs, \"Australia\") #> ! importing local data (version Jul 2023); use \"force=TRUE\" if you need latest version. #> Linking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE #> Warning: attribute variables are assumed to be spatially constant throughout all geometries aust <- rnaturalearth::ne_countries(country = \"Australia\", returnclass = \"sf\") gg <- ggplot2::ggplot() +   ggplot2::geom_sf(data = dat, ggplot2::aes(fill = wdpa)) +   ggplot2::geom_sf(data = aust, fill = \"grey50\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_PlanningUnits.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create square or heaxagonal planning units for your area of interest. — splnr_get_PlanningUnits","title":"Function to create square or heaxagonal planning units for your area of interest. — splnr_get_PlanningUnits","text":"code takes bbox limits important. output inherits crs sf object ensure correct projection needs code assumes Planning Unit whose centroids land removed. approximates > 50% PU landward.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_PlanningUnits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create square or heaxagonal planning units for your area of interest. — splnr_get_PlanningUnits","text":"","code":"splnr_get_PlanningUnits(   Bndry,   InnerB,   CellArea = 1000,   Shape = \"hexagon\",   inverse = FALSE )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_PlanningUnits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create square or heaxagonal planning units for your area of interest. — splnr_get_PlanningUnits","text":"Bndry sf polygon object outlines limits study area. InnerB sf multipolygon object contains areas (ie land) wish remove grid. CellArea area km wish resultant Planning Units . Shape Hexagon Square inverse invert InnerB keep areas within InnerB","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_PlanningUnits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create square or heaxagonal planning units for your area of interest. — splnr_get_PlanningUnits","text":"sf object planning units","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_PlanningUnits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to create square or heaxagonal planning units for your area of interest. — splnr_get_PlanningUnits","text":"example options hexagonal PU_size PU_size <- 5240 # km2 (~1 deg equator) PU_size <- 2620 # km2 (~0.5 deg equator) PU_size <- 669.9 # km2 (~0.25 deg equator) Written Jason Everett (UQ/UNSW/CSIRO) Written: 15 December 2020 Updated: 8th April 2022","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_PlanningUnits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create square or heaxagonal planning units for your area of interest. — splnr_get_PlanningUnits","text":"","code":"dat_bndry_moll <- dat_bndry %>% sf::st_transform(\"ESRI:54009\") landmass <- rnaturalearth::ne_countries(returnclass = \"sf\") %>% sf::st_transform(\"ESRI:54009\") PUs <- splnr_get_PlanningUnits(dat_bndry_moll, landmass, CellArea = 10000, Shape = \"hexagon\") ggplot2::ggplot() +   ggplot2::geom_sf(data = dat_bndry_moll, colour = \"blue\", fill = NA) +   ggplot2::geom_sf(data = PUs, colour = \"black\", fill = NA)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_TargetsIA.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Inverse Area Targets — splnr_get_TargetsIA","title":"Calculate Inverse Area Targets — splnr_get_TargetsIA","text":"function takes min (target_min) max (target_max) target range calculates inverse area target feature based areal coverage.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_TargetsIA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Inverse Area Targets — splnr_get_TargetsIA","text":"","code":"splnr_get_TargetsIA(df, target_min, target_max)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_TargetsIA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Inverse Area Targets — splnr_get_TargetsIA","text":"df sf dataframe features calculate target_min minimum target inverse area target_max maximum target inverse area","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_TargetsIA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Inverse Area Targets — splnr_get_TargetsIA","text":"sf dataframe Inverse Area Targets added Target","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_get_TargetsIA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Inverse Area Targets — splnr_get_TargetsIA","text":"","code":"targets <- dat_species_prob %>%   splnr_get_TargetsIA(target_min = 0.3, target_max = 0.8)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_IUCNRedList.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Species to IUCN RedList — splnr_match_IUCNRedList","title":"Match Species to IUCN RedList — splnr_match_IUCNRedList","text":"First need API key, alphanumeric string provided IUCN need send every request; following function takes website, need fill form (might take 1-2 days receive key) rl_use_iucn() receive email API key, set environmental variable (MUST named IUCN_REDLIST_KEY) need re-step everytime restart R Sys.setenv(IUCN_REDLIST_KEY = \"\") add IUCN_REDLIST_KEY = \"\" .Renviron file permanently set Sys.getenv(\"IUCN_REDLIST_KEY\") #' check Evaluated DD: Data Deficient LC: Least Concern NT: Near Threatened VU: Vulnerable EN: Endangered CR: Critically Endangered EW: Extinct Wild EX: Extinct LRlc: Low risk – least concern LRnt: Low risk – near threatened LRcd: Low risk - conservation dependent Categories care cate <- c(\"EX\",\"EW\",\"CR\",\"EN\",\"VU\")","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_IUCNRedList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Species to IUCN RedList — splnr_match_IUCNRedList","text":"","code":"splnr_match_IUCNRedList(df, species_col = \"Species\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_IUCNRedList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Species to IUCN RedList — splnr_match_IUCNRedList","text":"df dataframe containing species matched IUCN redlist species_col string name column containting species name","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_IUCNRedList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Species to IUCN RedList — splnr_match_IUCNRedList","text":"dataframe additional column IUCN_Category","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_IUCNRedList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match Species to IUCN RedList — splnr_match_IUCNRedList","text":"","code":"if (FALSE) { df <- data.frame(Species = c(\"Diomedea exulans\", \"Hippocampus kuda\", \"Squatina squatina\")) %>%   splnr_match_IUCNRedList() }"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Substitute numbers for all_names in regionalisations — splnr_match_names","title":"Substitute numbers for all_names in regionalisations — splnr_match_names","text":"Many regionalisations numeric values shape files correspond vector names. provide function quickly replace numbers names.","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Substitute numbers for all_names in regionalisations — splnr_match_names","text":"","code":"splnr_match_names(dat, nam)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Substitute numbers for all_names in regionalisations — splnr_match_names","text":"dat sf data frame one column numeric/integer corresponding nam nam Named character vector names corresponding column dat recode","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Substitute numbers for all_names in regionalisations — splnr_match_names","text":"sf dataframe numeric regionalisations substituted category names","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_match_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Substitute numbers for all_names in regionalisations — splnr_match_names","text":"","code":"dat <- dat_region %>% dplyr::select(-cellID) nam <- c(\"Region1\" = \"SE Aust\", \"Region2\" = \"Tas\", \"Region3\" = \"NE Aust\") df <- splnr_match_names(dat, nam)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_CorrMat.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot correlation matrices — splnr_plot_CorrMat","title":"Plot correlation matrices — splnr_plot_CorrMat","text":"Plot correlation matrices","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_CorrMat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot correlation matrices — splnr_plot_CorrMat","text":"","code":"splnr_plot_CorrMat(   x,   colourGradient = c(\"#BB4444\", \"#FFFFFF\", \"#4477AA\"),   legendTitle = \"Correlation \\ncoefficient\",   AxisLabels = NULL,   plotTitle = \"\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_CorrMat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot correlation matrices — splnr_plot_CorrMat","text":"x correlation matrix prioritizr solutions colourGradient list three colour values high positive, high negative correlation legendTitle character value title legend. Can empty (\"\"). AxisLabels list labels solutions correlated (Default: NULL). Length needs match number correlated solutions. plotTitle character value title plot. Can empty (\"\").","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_CorrMat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot correlation matrices — splnr_plot_CorrMat","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_CorrMat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot correlation matrices — splnr_plot_CorrMat","text":"","code":"# 30 % target for problem/solution 1 dat_problem <- prioritizr::problem(dat_species_bin %>% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.3) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln <- dat_problem %>%   prioritizr::solve.ConservationProblem()  # 50 % target for problem/solution 2 dat_problem2 <- prioritizr::problem(dat_species_bin %>%                                       dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.5) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln2 <- dat_problem2 %>%   prioritizr::solve.ConservationProblem()  CorrMat <- splnr_prepKappaCorrData(list(dat_soln, dat_soln2), name_sol = c(\"soln1\", \"soln2\")) #> New names: #> • `soln1` -> `soln1...1` #> • `soln1` -> `soln1...2` #> New names: #> • `soln2` -> `soln2...1` #> • `soln2` -> `soln2...2` #> Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if #> `.name_repair` is omitted as of tibble 2.0.0. #> ℹ Using compatibility `.name_repair`. #> ℹ The deprecated feature was likely used in the spatialplanr package. #>   Please report the issue at #>   <https://github.com/MathMarEcol/spatialplanr/issues>.  (splnr_plot_CorrMat(CorrMat, AxisLabels = c(\"Solution 1\", \"Solution 2\"))) #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale. #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale."},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_MPAs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MPAs — splnr_plot_MPAs","title":"Plot MPAs — splnr_plot_MPAs","text":"Plot MPAs","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_MPAs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MPAs — splnr_plot_MPAs","text":"","code":"splnr_plot_MPAs(   df,   landmass = NA,   colorVals = c(`TRUE` = \"blue\", `FALSE` = \"white\"),   colorPUs = \"grey80\",   showLegend = TRUE,   plotTitle = \"Locked In Areas\",   legendTitle = \"\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_MPAs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MPAs — splnr_plot_MPAs","text":"df sf object marine protected areas landmass sf object land polygon colorVals list object named vectors match color value according name. \"TRUE\" stands selected planning units. colorPUs color value outline planning units. showLegend logical command whether show legend solution (Default: TRUE). plotTitle character value title plot. Can empty (\"\"). legendTitle character value title legend. Can empty (\"\").","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_MPAs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MPAs — splnr_plot_MPAs","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_MPAs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MPAs — splnr_plot_MPAs","text":"","code":"splnr_plot_MPAs(dat_mpas)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_PUs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Planning Units — splnr_plot_PUs","title":"Plot Planning Units — splnr_plot_PUs","text":"Plot Planning Units","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_PUs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Planning Units — splnr_plot_PUs","text":"","code":"splnr_plot_PUs(PlanUnits, landmass = NA)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_PUs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Planning Units — splnr_plot_PUs","text":"PlanUnits Planning Units sf object landmass sf object land polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_PUs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Planning Units — splnr_plot_PUs","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_PUs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Planning Units — splnr_plot_PUs","text":"","code":"splnr_plot_PUs(dat_PUs)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_Solution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot prioritizr solution — splnr_plot_Solution","title":"Plot prioritizr solution — splnr_plot_Solution","text":"Plot prioritizr solution","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_Solution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot prioritizr solution — splnr_plot_Solution","text":"","code":"splnr_plot_Solution(   soln,   PlanUnits,   landmass = NA,   colorVals = c(`TRUE` = \"#3182bd\", `FALSE` = \"#c6dbef\"),   colorPUs = \"grey80\",   showLegend = TRUE,   plotTitle = \"Solution\",   legendTitle = \"Planning Units\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_Solution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot prioritizr solution — splnr_plot_Solution","text":"soln prioritizr solution PlanUnits Planning Units sf object landmass sf object land polygon colorVals list object named vectors match color value according name. \"TRUE\" stands selected planning units. colorPUs color value outline planning units. showLegend logical command whether show legend solution (Default: TRUE). plotTitle character value title plot. Can empty (\"\"). legendTitle character value title legend. Can empty (\"\").","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_Solution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot prioritizr solution — splnr_plot_Solution","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_Solution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot prioritizr solution — splnr_plot_Solution","text":"","code":"dat_problem <- prioritizr::problem(dat_species_bin %>% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.3) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln <- dat_problem %>%  prioritizr::solve.ConservationProblem()  splnr_plot_Solution(dat_soln, dat_PUs)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_binFeature.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot binary feature — splnr_plot_binFeature","title":"Plot binary feature — splnr_plot_binFeature","text":"Plot binary feature","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_binFeature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot binary feature — splnr_plot_binFeature","text":"","code":"splnr_plot_binFeature(   df,   colInterest,   PlanUnits,   landmass = NA,   colorVals = c(Suitable = \"#3182bd\", `Not Suitable` = \"#c6dbef\"),   colorPUs = \"grey80\",   showLegend = TRUE,   plotTitle = \" \",   legendTitle = \"Habitat\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_binFeature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot binary feature — splnr_plot_binFeature","text":"df data frame binary feature information colInterest column data frame contains binary information feature plot PlanUnits Planning Units sf object landmass sf object land polygon colorVals list object named vectors match color value according name. \"TRUE\" stands selected planning units. colorPUs color value outline planning units. showLegend logical command whether show legend solution (Default: TRUE). plotTitle character value title plot. Can empty (\"\"). legendTitle character value title legend. Can empty (\"\").","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_binFeature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot binary feature — splnr_plot_binFeature","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_binFeature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot binary feature — splnr_plot_binFeature","text":"","code":"splnr_plot_binFeature(dat_species_bin, dat_species_bin$Spp1, dat_PUs)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_circBplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot circular barplot — splnr_plot_circBplot","title":"Plot circular barplot — splnr_plot_circBplot","text":"Plot circular barplot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_circBplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot circular barplot — splnr_plot_circBplot","text":"","code":"splnr_plot_circBplot(   df,   legend_color,   legend_list,   indicateTargets = TRUE,   impTarget = NA,   repTarget = NA,   colTarget = \"red\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_circBplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot circular barplot — splnr_plot_circBplot","text":"df data frame following column names: feature, value, group legend_color vector list colors; group names corresponding colors legend_list list groups/legends groups indicateTargets logical whether show targets set impTarget target important features (%) repTarget target representative features (%) colTarget string colour value indicator line","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_circBplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot circular barplot — splnr_plot_circBplot","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_circBplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot circular barplot — splnr_plot_circBplot","text":"","code":"# DISCLAIMER: THIS SOLUTION IS NOT ACTUALLY RUN WITH THESE TARGETS YET  dat_problem <- prioritizr::problem(dat_species_bin %>% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.3) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln <- dat_problem %>%  prioritizr::solve.ConservationProblem()  s1 <- dat_soln %>%   tibble::as_tibble()  p1 <- dat_problem  df_rep_imp <- prioritizr::eval_feature_representation_summary(   p1,   s1[, \"solution_1\"] ) %>%   dplyr::select(feature, relative_held) %>%   dplyr::mutate(relative_held = relative_held * 100)  imp_layers <- c(\"Spp1\", \"Spp3\")  target <- data.frame(feature = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\")) %>%   dplyr::mutate(class = dplyr::if_else(.data$feature %in% imp_layers,     \"important\", \"representative\"   )) %>%   dplyr::mutate(target = dplyr::if_else(class == \"important\",     50 / 100, 30 / 100   ))  df <- merge(df_rep_imp, target) %>%   dplyr::select(-target) %>%   na.omit() %>%   dplyr::rename(value = relative_held) %>%   dplyr::rename(group = class)  colors <- c(   \"important\" = \"darkgreen\",   \"representative\" = \"darkred\" ) legends <- c(\"Important\", \"Representative\")  (splnr_plot_circBplot(df,   legend_list = legends,   legend_color = colors,   impTarget = 50, repTarget = 30 )) #> Warning: Removed 4 rows containing missing values (`geom_bar()`). #> Warning: Removed 6 rows containing missing values (`geom_text()`)."},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climData.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot climate data — splnr_plot_climData","title":"Plot climate data — splnr_plot_climData","text":"Plot climate data","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot climate data — splnr_plot_climData","text":"","code":"splnr_plot_climData(   df,   colInterest,   PlanUnits,   landmass = NA,   colorMap = \"C\",   colorPUs = \"grey80\",   plotTitle = \" \",   legendTitle = \"Climate metric\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot climate data — splnr_plot_climData","text":"df sf object climate metric information colInterest column data frame contains metric informatin PlanUnits Planning Units sf object landmass sf object land polygon colorMap character string indicating color map use (see https://ggplot2.tidyverse.org/reference/scale_viridis.html options) colorPUs color value outline planning units. plotTitle character value title plot. Can empty (\"\"). legendTitle character value title legend. Can empty (\"\").","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot climate data — splnr_plot_climData","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot climate data — splnr_plot_climData","text":"","code":"splnr_plot_climData(dat_clim, dat_clim$metric, dat_PUs)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climKernelDensity_Basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Kernel Density Plots for climate-smart spatial plans — splnr_plot_climKernelDensity_Basic","title":"Basic Kernel Density Plots for climate-smart spatial plans — splnr_plot_climKernelDensity_Basic","text":"Basic Kernel Density Plots climate-smart spatial plans","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climKernelDensity_Basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic Kernel Density Plots for climate-smart spatial plans — splnr_plot_climKernelDensity_Basic","text":"","code":"splnr_plot_climKernelDensity_Basic(soln)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climKernelDensity_Basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic Kernel Density Plots for climate-smart spatial plans — splnr_plot_climKernelDensity_Basic","text":"soln prioirtizr solution containing \"metric\" column containing used climate metric information","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climKernelDensity_Basic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic Kernel Density Plots for climate-smart spatial plans — splnr_plot_climKernelDensity_Basic","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climKernelDensity_Basic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic Kernel Density Plots for climate-smart spatial plans — splnr_plot_climKernelDensity_Basic","text":"","code":"Features <- dat_species_bin %>%   dplyr::select(-\"cellID\")  target <- Features %>%   sf::st_drop_geometry() %>%   colnames() %>%   data.frame() %>%   setNames(c(\"feature\")) %>%   dplyr::mutate(target = 0.3)  dat_species_binDF <- dat_species_bin %>%   sf::st_drop_geometry()  out_sf <- splnr_ClimatePriorityArea_CSapproach(   featuresDF = dat_species_bin,   percentile = 5, metricDF = dat_clim, direction = -1 )  target <- splnr_CPA_CSapproach_assignTargets(   featuresDF = Features,   targetsDF = target,   climateSmartDF = out_sf,   refugiaTarget = 1 )  out_sf <- out_sf %>%   dplyr::mutate(Cost_None = rep(1, 780)) %>%   dplyr::left_join(dat_clim %>%     sf::st_drop_geometry(), by = \"cellID\")  usedFeatures <- out_sf %>%   sf::st_drop_geometry() %>%   dplyr::select(-tidyselect::starts_with(\"Cost_\"), -\"cellID\", -\"metric\") %>%   names()  p1 <- prioritizr::problem(out_sf, usedFeatures, \"Cost_None\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(target$target) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_solnClim <- prioritizr::solve.ConservationProblem(p1) splnr_plot_climKernelDensity_Basic(dat_solnClim)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climKernelDensity_Fancy.html","id":null,"dir":"Reference","previous_headings":"","what":"Fancy Kernel Density Plots for climate-smart spatial plans — splnr_plot_climKernelDensity_Fancy","title":"Fancy Kernel Density Plots for climate-smart spatial plans — splnr_plot_climKernelDensity_Fancy","text":"Fancy Kernel Density Plots climate-smart spatial plans","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climKernelDensity_Fancy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fancy Kernel Density Plots for climate-smart spatial plans — splnr_plot_climKernelDensity_Fancy","text":"","code":"splnr_plot_climKernelDensity_Fancy(   solution_list,   names,   colorMap = \"C\",   legendTitle = expression(\"Δ °C y\"^\"-1\" * \"\"),   xAxisLab = expression(\"Climate warming (Δ °C y\"^\"-1\" * \")\") )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climKernelDensity_Fancy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fancy Kernel Density Plots for climate-smart spatial plans — splnr_plot_climKernelDensity_Fancy","text":"solution_list list prioirtizr solutions (e.g. solution_list = list(s1, s2)) containing \"metric\" column containing used climate metric information names list names solutions (names = c(\"Input 1\", \"Input 2\")) colorMap character string indicating color map use (see https://ggplot2.tidyverse.org/reference/scale_viridis.html options) legendTitle character value title legend. Can empty (\"\"). xAxisLab characted value x Axis label depending climate metric input","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climKernelDensity_Fancy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fancy Kernel Density Plots for climate-smart spatial plans — splnr_plot_climKernelDensity_Fancy","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_climKernelDensity_Fancy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fancy Kernel Density Plots for climate-smart spatial plans — splnr_plot_climKernelDensity_Fancy","text":"","code":"Features <- dat_species_bin %>%   dplyr::select(-\"cellID\")  target <- Features %>%   sf::st_drop_geometry() %>%   colnames() %>%   data.frame() %>%   setNames(c(\"feature\")) %>%   dplyr::mutate(target = 0.3)  dat_species_binDF <- dat_species_bin %>%   sf::st_drop_geometry()  out_sf <- splnr_ClimatePriorityArea_CSapproach(   featuresDF = dat_species_bin,   percentile = 5, metricDF = dat_clim, direction = -1 )  target <- splnr_CPA_CSapproach_assignTargets(   featuresDF = Features,   targetsDF = target,   climateSmartDF = out_sf,   refugiaTarget = 1 )  out_sf <- out_sf %>%   dplyr::mutate(Cost_None = rep(1, 780)) %>%   dplyr::left_join(dat_clim %>%     sf::st_drop_geometry(), by = \"cellID\")  usedFeatures <- out_sf %>%   sf::st_drop_geometry() %>%   dplyr::select(-tidyselect::starts_with(\"Cost_\"), -\"cellID\", -\"metric\") %>%   names()  p1 <- prioritizr::problem(out_sf, usedFeatures, \"Cost_None\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(target$target) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_solnClim <- prioritizr::solve.ConservationProblem(p1) splnr_plot_climKernelDensity_Basic(dat_solnClim)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot solution comparison — splnr_plot_comparison","title":"Plot solution comparison — splnr_plot_comparison","text":"Plot solution comparison","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot solution comparison — splnr_plot_comparison","text":"","code":"splnr_plot_comparison(   soln1,   soln2,   landmass = NA,   PlanUnits = NA,   colorPUs = \"grey80\",   legendTitle = \"Scenario 2 compared to Scenario 1:\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot solution comparison — splnr_plot_comparison","text":"soln1 first prioritizr solution soln2 second prioritizr solution landmass sf object land polygon PlanUnits Planning Units sf object colorPUs color value outline planning units. legendTitle character value title legend. Can empty (\"\").","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot solution comparison — splnr_plot_comparison","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot solution comparison — splnr_plot_comparison","text":"","code":"# 30 % target for problem/solution 1 dat_problem <- prioritizr::problem(dat_species_bin %>% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.3) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln <- dat_problem %>%   prioritizr::solve.ConservationProblem()  # 50 % target for problem/solution 2 dat_problem2 <- prioritizr::problem(dat_species_bin %>%                                       dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.5) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln2 <- dat_problem2 %>%   prioritizr::solve.ConservationProblem()  (splnr_plot_comparison(dat_soln, dat_soln2))"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_cost.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cost — splnr_plot_cost","title":"Plot cost — splnr_plot_cost","text":"Plot cost","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_cost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cost — splnr_plot_cost","text":"","code":"splnr_plot_cost(   Cost,   Cost_name = \"Cost\",   landmass = NA,   paletteName = \"YlGnBu\",   plotTitle = \"Cost (USD)\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_cost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cost — splnr_plot_cost","text":"Cost sf object cost prioritizr Cost_name Name cost column landmass sf object land polygon paletteName string (number) color palette use. Available palettes can found https://ggplot2.tidyverse.org/reference/scale_brewer.html. plotTitle character value title plot. Can empty (\"\").","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_cost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot cost — splnr_plot_cost","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_cost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot cost — splnr_plot_cost","text":"","code":"dat_problem <- prioritizr::problem(dat_species_bin %>% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.3) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln <- dat_problem %>%  prioritizr::solve.ConservationProblem()  dat_cost <- dat_soln %>%   dplyr::mutate(Cost = runif(n = dim(.)[[1]]))  splnr_plot_cost(dat_cost)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_costOverlay.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cost overlay — splnr_plot_costOverlay","title":"Plot cost overlay — splnr_plot_costOverlay","text":"Plot cost overlay","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_costOverlay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cost overlay — splnr_plot_costOverlay","text":"","code":"splnr_plot_costOverlay(   soln,   Cost = NA,   Cost_name = \"Cost\",   landmass = NA,   legendTitle = \"Cost\",   plotTitle = \"Solution overlaid with cost\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_costOverlay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cost overlay — splnr_plot_costOverlay","text":"soln prioritizr solution Cost sf object cost prioritizr.case prioritizrsolution contain cost, alternative cost object provided used generate solution (default: NA). Cost_name Name cost column landmass sf object land polygon legendTitle character value title legend. Can empty (\"\"). plotTitle character value title plot. Can empty (\"\").","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_costOverlay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot cost overlay — splnr_plot_costOverlay","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_costOverlay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot cost overlay — splnr_plot_costOverlay","text":"","code":"dat_problem <- prioritizr::problem(dat_species_bin %>% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.3) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln <- dat_problem %>%  prioritizr::solve.ConservationProblem()  splnr_plot_costOverlay(soln = dat_soln)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_featureNo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot number of features — splnr_plot_featureNo","title":"Plot number of features — splnr_plot_featureNo","text":"Plot number features","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_featureNo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot number of features — splnr_plot_featureNo","text":"","code":"splnr_plot_featureNo(   df,   landmass = NA,   colorPUs = \"grey80\",   showLegend = TRUE,   paletteName = \"YlGnBu\",   plotTitle = \"Number of Features\",   legendTitle = \"Features\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_featureNo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot number of features — splnr_plot_featureNo","text":"df sf object features landmass sf object land polygon colorPUs color value outline planning units. showLegend logical command whether show legend solution (Default: TRUE). paletteName string (number) color palette use. Available palettes can found https://ggplot2.tidyverse.org/reference/scale_brewer.html. plotTitle character value title plot. Can empty (\"\"). legendTitle character value title legend. Can empty (\"\").","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_featureNo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot number of features — splnr_plot_featureNo","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_featureNo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot number of features — splnr_plot_featureNo","text":"","code":"(splnr_plot_featureNo(dat_species_bin))"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreFerrierPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Ferrier importance score (ONLY WORKS FOR MINIMUM SET OBJECTIVE FUNCTION) — splnr_plot_impScoreFerrierPlot","title":"Plot Ferrier importance score (ONLY WORKS FOR MINIMUM SET OBJECTIVE FUNCTION) — splnr_plot_impScoreFerrierPlot","text":"Plot Ferrier importance score (WORKS MINIMUM SET OBJECTIVE FUNCTION)","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreFerrierPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Ferrier importance score (ONLY WORKS FOR MINIMUM SET OBJECTIVE FUNCTION) — splnr_plot_impScoreFerrierPlot","text":"","code":"splnr_plot_impScoreFerrierPlot(   soln,   pDat,   plotTitle = \"\",   colorMap = \"A\",   legendTitle = \"Importance Score \\n(Ferrier Score)\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreFerrierPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Ferrier importance score (ONLY WORKS FOR MINIMUM SET OBJECTIVE FUNCTION) — splnr_plot_impScoreFerrierPlot","text":"soln prioritizr solution pDat prioritizr problem plotTitle character value title plot. Can empty (\"\"). colorMap character string indicating color map use (see https://ggplot2.tidyverse.org/reference/scale_viridis.html options) legendTitle character value title legend. Can empty (\"\").","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreFerrierPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Ferrier importance score (ONLY WORKS FOR MINIMUM SET OBJECTIVE FUNCTION) — splnr_plot_impScoreFerrierPlot","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreFerrierPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Ferrier importance score (ONLY WORKS FOR MINIMUM SET OBJECTIVE FUNCTION) — splnr_plot_impScoreFerrierPlot","text":"","code":"dat_problem <- prioritizr::problem(dat_species_bin %>% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.3) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln <- dat_problem %>%   prioritizr::solve.ConservationProblem()  (splnr_plot_impScoreFerrierPlot(dat_soln, dat_problem))"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreRCPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Replacement cost importance score (takes too long to use in App) — splnr_plot_impScoreRCPlot","title":"Replacement cost importance score (takes too long to use in App) — splnr_plot_impScoreRCPlot","text":"Replacement cost importance score (takes long use App)","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreRCPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replacement cost importance score (takes too long to use in App) — splnr_plot_impScoreRCPlot","text":"","code":"splnr_plot_impScoreRCPlot(   soln,   pDat,   plotTitle = \"\",   colorMap = \"A\",   legendTitle = \"Importance Score \\n(Replacement Cost Score)\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreRCPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replacement cost importance score (takes too long to use in App) — splnr_plot_impScoreRCPlot","text":"soln prioritizr solution pDat prioritizr problem plotTitle character value title plot. Can empty (\"\"). colorMap character string indicating color map use (see https://ggplot2.tidyverse.org/reference/scale_viridis.html options) legendTitle character value title legend. Can empty (\"\").","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreRCPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replacement cost importance score (takes too long to use in App) — splnr_plot_impScoreRCPlot","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreRCPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replacement cost importance score (takes too long to use in App) — splnr_plot_impScoreRCPlot","text":"","code":"if (FALSE) { dat_problem <- prioritizr::problem(dat_species_bin %>% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.3) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln <- dat_problem %>%   prioritizr::solve.ConservationProblem()  (splnr_plot_impScoreRCPlot(dat_soln, dat_problem)) }"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreRWRPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Rarity weighted richness importance score (can be used with minimum shortfall OBJECTIVE FUNCTION) — splnr_plot_impScoreRWRPlot","title":"Plot Rarity weighted richness importance score (can be used with minimum shortfall OBJECTIVE FUNCTION) — splnr_plot_impScoreRWRPlot","text":"Plot Rarity weighted richness importance score (can used minimum shortfall OBJECTIVE FUNCTION)","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreRWRPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Rarity weighted richness importance score (can be used with minimum shortfall OBJECTIVE FUNCTION) — splnr_plot_impScoreRWRPlot","text":"","code":"splnr_plot_impScoreRWRPlot(   soln,   pDat,   plotTitle = \"\",   colorMap = \"A\",   legendTitle = \"Importance Score \\n(Rarity Weighted Richness Score)\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreRWRPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Rarity weighted richness importance score (can be used with minimum shortfall OBJECTIVE FUNCTION) — splnr_plot_impScoreRWRPlot","text":"soln prioritizr solution pDat prioritizr problem plotTitle character value title plot. Can empty (\"\"). colorMap character string indicating color map use (see https://ggplot2.tidyverse.org/reference/scale_viridis.html options) legendTitle character value title legend. Can empty (\"\").","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreRWRPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Rarity weighted richness importance score (can be used with minimum shortfall OBJECTIVE FUNCTION) — splnr_plot_impScoreRWRPlot","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_impScoreRWRPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Rarity weighted richness importance score (can be used with minimum shortfall OBJECTIVE FUNCTION) — splnr_plot_impScoreRWRPlot","text":"","code":"dat_problem <- prioritizr::problem(dat_species_bin %>% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.3) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln <- dat_problem %>%   prioritizr::solve.ConservationProblem()  (splnr_plot_impScoreRWRPlot(dat_soln, dat_problem))"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_longhurst.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Longhurst Provinces — splnr_plot_longhurst","title":"Plot Longhurst Provinces — splnr_plot_longhurst","text":"Plot Longhurst Provinces","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_longhurst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Longhurst Provinces — splnr_plot_longhurst","text":"","code":"splnr_plot_longhurst(PlanUnits, landmass)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_longhurst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Longhurst Provinces — splnr_plot_longhurst","text":"PlanUnits Planning Units sf object landmass sf object land polygon","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_longhurst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Longhurst Provinces — splnr_plot_longhurst","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_longhurst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Longhurst Provinces — splnr_plot_longhurst","text":"","code":"if (FALSE) { df <- splnr_plot_longhurst(PlanUnits, landmass) }"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_selectionFreq.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot selection frequency of a planning unit in an array of prioritisations — splnr_plot_selectionFreq","title":"Plot selection frequency of a planning unit in an array of prioritisations — splnr_plot_selectionFreq","text":"Plot selection frequency planning unit array prioritisations","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_selectionFreq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot selection frequency of a planning unit in an array of prioritisations — splnr_plot_selectionFreq","text":"","code":"splnr_plot_selectionFreq(   selFreq,   landmass = NA,   plotTitle = \"\",   paletteName = \"Greens\",   legendTitle = \"Selection \\nFrequency\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_selectionFreq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot selection frequency of a planning unit in an array of prioritisations — splnr_plot_selectionFreq","text":"selFreq sf object containing selection frequency planning unit array solutions landmass sf object land polygon plotTitle character value title plot. Can empty (\"\"). paletteName string (number) color palette use. Available palettes can found https://ggplot2.tidyverse.org/reference/scale_brewer.html. legendTitle character value title legend. Can empty (\"\").","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_selectionFreq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot selection frequency of a planning unit in an array of prioritisations — splnr_plot_selectionFreq","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_selectionFreq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot selection frequency of a planning unit in an array of prioritisations — splnr_plot_selectionFreq","text":"","code":"dat_problem <- prioritizr::problem(dat_species_bin %>% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.3) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  # create conservation problem that contains a portfolio of solutions dat_soln_portfolio <- dat_problem %>%   prioritizr::add_cuts_portfolio(number_solutions = 5) %>%   prioritizr::solve.ConservationProblem()  selFreq <- splnr_prep_selFreq(solnMany = dat_soln_portfolio, type = \"portfolio\") (splnr_plot_selectionFreq(selFreq))"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot how well targets are met — splnr_plot_targets","title":"Plot how well targets are met — splnr_plot_targets","text":"Plot well targets met","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot how well targets are met — splnr_plot_targets","text":"","code":"splnr_plot_targets(df, nr = 1, setTarget = NA, plotTitle = \"\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot how well targets are met — splnr_plot_targets","text":"df df containing target information (resulting splnr_prepTargetData() function) nr Number rows legend setTarget number percent (%) features set target plotTitle character value title plot. Can empty (\"\").","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot how well targets are met — splnr_plot_targets","text":"ggplot object plot","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_plot_targets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot how well targets are met — splnr_plot_targets","text":"","code":"dat_problem <- prioritizr::problem(dat_species_bin %>% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.3) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln <- dat_problem %>%  prioritizr::solve.ConservationProblem()  # not including incidental species coverage dfNInc <- splnr_prepTargetData(   soln = dat_soln,   pDat = dat_problem,   allDat = dat_species_bin,   Category = Category_vec,   solnCol = \"solution_1\" )  (splnr_plot_targets(dfNInc, nr = 1, setTarget = 30, plotTitle = \"Target: \")) #> Warning: Removed 5 rows containing missing values (`position_stack()`).   # including incidental species coverage dfInc <- splnr_prepTargetData(   soln = dat_soln,   pDat = dat_problem,   allDat = dat_species_bin2,   Category = Category_vec2,   solnCol = \"solution_1\" ) (splnr_plot_targets(dfInc, nr = 1, setTarget = 30, plotTitle = \"Target: \")) #> Warning: Removed 1 rows containing missing values (`position_stack()`). #> Warning: Removed 5 rows containing missing values (`position_stack()`)."},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prepKappaCorrData.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data to plot Cohen's Kappa correlation matrix — splnr_prepKappaCorrData","title":"Prepare data to plot Cohen's Kappa correlation matrix — splnr_prepKappaCorrData","text":"Prepare data plot Cohen's Kappa correlation matrix","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prepKappaCorrData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data to plot Cohen's Kappa correlation matrix — splnr_prepKappaCorrData","text":"","code":"splnr_prepKappaCorrData(sol, name_sol)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prepKappaCorrData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data to plot Cohen's Kappa correlation matrix — splnr_prepKappaCorrData","text":"sol List prioritizr solutions (sf objects) solutions column name solution_1 name_sol Name tags different solutions","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prepKappaCorrData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data to plot Cohen's Kappa correlation matrix — splnr_prepKappaCorrData","text":"matrixOut matrix","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prepKappaCorrData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare data to plot Cohen's Kappa correlation matrix — splnr_prepKappaCorrData","text":"","code":"# 30 % target for problem/solution 1 dat_problem <- prioritizr::problem(dat_species_bin %>% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.3) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln <- dat_problem %>%   prioritizr::solve.ConservationProblem()  # 50 % target for problem/solution 2 dat_problem2 <- prioritizr::problem(dat_species_bin %>%                                       dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.5) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln2 <- dat_problem2 %>%   prioritizr::solve.ConservationProblem()  corrMat <- splnr_prepKappaCorrData(list(dat_soln, dat_soln2), name_sol = c(\"soln1\", \"soln2\")) #> New names: #> • `soln1` -> `soln1...1` #> • `soln1` -> `soln1...2` #> New names: #> • `soln2` -> `soln2...1` #> • `soln2` -> `soln2...2`"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prepTargetData.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data to plot how well targets are met — splnr_prepTargetData","title":"Prepare data to plot how well targets are met — splnr_prepTargetData","text":"Prepare data plot well targets met","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prepTargetData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data to plot how well targets are met — splnr_prepTargetData","text":"","code":"splnr_prepTargetData(   soln,   pDat,   allDat,   Category = NA,   Dict = NA,   dataCol = \"Abbrev\",   climsmart = FALSE,   solnCol = \"solution_1\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prepTargetData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data to plot how well targets are met — splnr_prepTargetData","text":"soln prioritizr solution pDat prioritizr problem allDat sf dataframe containing features Category tibble information category features belong (NA, either provide Dict feature category) Dict tibble resembling dictionary contain: Common species name ('Common'), category features belong ('Category'), whether feature important representative ('Class') features called Data (e.g. 'Scientific')  (NA, either provide Catgories feature category) dataCol Name column Dictionary (Dict) Species names saved (default: 'Abbrev') climsmart logical denoting whether spatial planning done climate-smart (targets calculated differently) solnCol Name column solution","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prepTargetData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data to plot how well targets are met — splnr_prepTargetData","text":"tbl_df dataframe","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prepTargetData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare data to plot how well targets are met — splnr_prepTargetData","text":"","code":"# not including incidental species coverage dat_problem <- prioritizr::problem(dat_species_bin %>% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.3) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln <- dat_problem %>%   prioritizr::solve.ConservationProblem()  dfNInc <- splnr_prepTargetData(   soln = dat_soln,   pDat = dat_problem,   allDat = dat_species_bin,   Dict = NA,   Category = Category_vec,   solnCol = \"solution_1\" )  # including incidental species coverage dfInc <- splnr_prepTargetData(   soln = dat_soln,   pDat = dat_problem,   allDat = dat_species_bin2,   Dict = NA,   Category = Category_vec2,   solnCol = \"solution_1\" )"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prep_selFreq.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data to plot Selection Frequency of planning units — splnr_prep_selFreq","title":"Prepare data to plot Selection Frequency of planning units — splnr_prep_selFreq","text":"Prepare data plot Selection Frequency planning units","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prep_selFreq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data to plot Selection Frequency of planning units — splnr_prep_selFreq","text":"","code":"splnr_prep_selFreq(solnMany, type = \"portfolio\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prep_selFreq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data to plot Selection Frequency of planning units — splnr_prep_selFreq","text":"solnMany List portfolio prioritizr solutions type Either \"portfolio\" (sf object) portfolop produced using prioritizr \"list\" list solutions","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prep_selFreq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data to plot Selection Frequency of planning units — splnr_prep_selFreq","text":"selFreq  sf object containing column selection frequency (sum solutions).","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_prep_selFreq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare data to plot Selection Frequency of planning units — splnr_prep_selFreq","text":"","code":"dat_problem <- prioritizr::problem(dat_species_bin %>% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),                                    features = c(\"Spp1\", \"Spp2\", \"Spp3\", \"Spp4\", \"Spp5\"),                                    cost_column = \"Cost\") %>%   prioritizr::add_min_set_objective() %>%   prioritizr::add_relative_targets(0.3) %>%   prioritizr::add_binary_decisions() %>%   prioritizr::add_default_solver(verbose = FALSE)  dat_soln <- dat_problem %>%   prioritizr::solve.ConservationProblem()  # create conservation problem that contains a portfolio of solutions dat_soln_portfolio <- dat_problem %>%   prioritizr::add_cuts_portfolio(number_solutions = 5) %>%   prioritizr::solve.ConservationProblem()  selFreq <- splnr_prep_selFreq(solnMany = dat_soln_portfolio, type = \"portfolio\") (splnr_plot_selectionFreq(selFreq))"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_replace_NAs.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove NAs from spatial data using nearest neighbour — splnr_replace_NAs","title":"Remove NAs from spatial data using nearest neighbour — splnr_replace_NAs","text":"Remove NAs spatial data using nearest neighbour","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_replace_NAs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove NAs from spatial data using nearest neighbour — splnr_replace_NAs","text":"","code":"splnr_replace_NAs(df, vari)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_replace_NAs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove NAs from spatial data using nearest neighbour — splnr_replace_NAs","text":"df sf dataframe vari Variable remove NAs ","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_replace_NAs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove NAs from spatial data using nearest neighbour — splnr_replace_NAs","text":"sf object NAs replaced nearest neighbour","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_replace_NAs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove NAs from spatial data using nearest neighbour — splnr_replace_NAs","text":"","code":"df <- dat_species_prob %>%   splnr_replace_NAs(\"Spp2\")"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_scale_01.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale spatial layers to between 0 and 1 — splnr_scale_01","title":"Scale spatial layers to between 0 and 1 — splnr_scale_01","text":"Scale spatial layers 0 1","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_scale_01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale spatial layers to between 0 and 1 — splnr_scale_01","text":"","code":"splnr_scale_01(dat, col_name)"},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_scale_01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale spatial layers to between 0 and 1 — splnr_scale_01","text":"dat sf dataframe col_name Name column scale","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_scale_01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale spatial layers to between 0 and 1 — splnr_scale_01","text":"sf dataframe","code":""},{"path":"https://mathmarecol.github.io/spatialplanr/reference/splnr_scale_01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale spatial layers to between 0 and 1 — splnr_scale_01","text":"","code":"df <- dat_species_prob %>%   dplyr::mutate(Spp1 = Spp1 * 100) %>%   splnr_scale_01(col_name = \"Spp1\")"}]
