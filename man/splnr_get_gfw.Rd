% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splnr_get_gfw.R
\name{splnr_get_gfw}
\alias{splnr_get_gfw}
\title{Function to recover data from Global Fishing Watch.}
\usage{
splnr_get_gfw(
  region,
  start_date,
  end_date,
  temp_res,
  spat_res = "low",
  region_source = "eez",
  key = gfwr::gfw_auth(),
  cCRS = "EPSG:4326",
  compress = FALSE
)
}
\arguments{
\item{region}{Region studied (character) or a geojson shape to filter raster}

\item{start_date}{Start date (waited format : "\%Y-\%m-\%d").}

\item{end_date}{End date (waited format : "\%Y-\%m-\%d").}

\item{temp_res}{Temporal resolution ("daily","monthly","yearly").}

\item{spat_res}{Spatial resolution ("low" for 0.1 degree, "high" for 0.01 degree).}

\item{region_source}{source of the region ('eez','mpa', 'rfmo' or 'user_json')}

\item{key}{Token for GFW API (see details GlobalFishingWatch_Examples vignette).}

\item{cCRS}{The crs to which the sf will be returned (default = "EPSG:4326").}

\item{compress}{Binary operator to compress (aggregate) the data per coordinates (default = FALSE).}
}
\value{
An \code{sf} object with gfw data.
}
\description{
The code takes several parameters described below and return an sf object with gfw data aggregated or not (param compress)
}
\details{
Written by Kilian Barreiro
Written: February 2024
}
\examples{
\dontrun{
Region <- "Coral Sea" # "Australia"
Type <- "Oceans" # "EEZ"

Shape <- "Hexagon" # "Shape of PUs
PU_size <- 10000 # km2

cCRS <- "ESRI:54009"

Bndry <- spatialplanr::splnr_get_boundary(Region, Type, cCRS)

landmass <- rnaturalearth::ne_countries(
 scale = "medium",
 returnclass = "sf"
) \%>\%
sf::st_transform(cCRS)

PUs <- spatialplanr::splnr_get_planningUnits(Bndry, landmass, PU_size, Shape)

gfw_data <- splnr_get_gfw('Australia', "2022-01-01", "2022-12-31", "yearly",
cCRS = cCRS, compress = TRUE)
}
}
