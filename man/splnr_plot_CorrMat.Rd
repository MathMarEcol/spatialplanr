% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splnr_plotting.R
\name{splnr_plot_corrMat}
\alias{splnr_plot_corrMat}
\title{Plot correlation matrices}
\usage{
splnr_plot_corrMat(
  x,
  colourGradient = c("#BB4444", "#FFFFFF", "#4477AA"),
  legendTitle = "Correlation \\ncoefficient",
  AxisLabels = NULL,
  plotTitle = ""
)
}
\arguments{
\item{x}{A correlation matrix of \code{prioritizr} solutions}

\item{colourGradient}{A list of three colour values for high positive, no and high negative correlation}

\item{legendTitle}{A character value for the title of the legend. Can be empty ("").}

\item{AxisLabels}{A list of labels of the solutions to be correlated (Default: NULL). Length needs to match number of correlated solutions.}

\item{plotTitle}{A character value for the title of the plot. Can be empty ("").}
}
\value{
A ggplot object of the plot
}
\description{
Plot correlation matrices
}
\examples{
# 30 \% target for problem/solution 1
dat_problem <- prioritizr::problem(dat_species_bin \%>\% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),
                                   features = c("Spp1", "Spp2", "Spp3", "Spp4", "Spp5"),
                                   cost_column = "Cost") \%>\%
  prioritizr::add_min_set_objective() \%>\%
  prioritizr::add_relative_targets(0.3) \%>\%
  prioritizr::add_binary_decisions() \%>\%
  prioritizr::add_default_solver(verbose = FALSE)

dat_soln <- dat_problem \%>\%
  prioritizr::solve.ConservationProblem()

# 50 \% target for problem/solution 2
dat_problem2 <- prioritizr::problem(dat_species_bin \%>\%
                                      dplyr::mutate(Cost = runif(n = dim(.)[[1]])),
                                   features = c("Spp1", "Spp2", "Spp3", "Spp4", "Spp5"),
                                   cost_column = "Cost") \%>\%
  prioritizr::add_min_set_objective() \%>\%
  prioritizr::add_relative_targets(0.5) \%>\%
  prioritizr::add_binary_decisions() \%>\%
  prioritizr::add_default_solver(verbose = FALSE)

dat_soln2 <- dat_problem2 \%>\%
  prioritizr::solve.ConservationProblem()

CorrMat <- splnr_get_kappaCorrData(list(dat_soln, dat_soln2), name_sol = c("soln1", "soln2"))

(splnr_plot_corrMat(CorrMat, AxisLabels = c("Solution 1", "Solution 2")))
}
