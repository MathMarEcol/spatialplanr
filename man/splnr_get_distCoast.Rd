% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splnr_get_distCoast.R
\name{splnr_get_distCoast}
\alias{splnr_get_distCoast}
\title{Function to compute distances to nearest coastline for each centroid of each planning unit in the 'sf' object provided.}
\usage{
splnr_get_distCoast(dat_sf, custom_coast = NULL)
}
\arguments{
\item{dat_sf}{An sf object.}

\item{custom_coast}{An sf coastline object (optional)}
}
\value{
An \code{sf} object with distances to the nearest coast
}
\description{
The code takes a sf object and return it updated with a new coastDistance column.
The output inherits the crs from this sf object so ensure it is in the correct projection for your needs
}
\details{
Written by Kristine Buenafe
Written: March/April 2023
Modified by Kilian Barreiro
Updated: December 2023
}
\examples{
crs <- sf::st_crs("+proj=longlat +datum=WGS84 +no_defs")
bbox <- sf::st_bbox(c(xmin = 0, ymin = 0, xmax = 3, ymax = 3))
grid <- sf::st_make_grid(bbox, n = c(3, 3), what = "polygons")
grid <- sf::st_sf(geometry = grid) \%>\%
  sf::st_set_crs(crs)
splnr_get_distCoast(grid)

cCRS <- "+proj=moll +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m no_defs"

Bndry <- splnr_get_boundary(Limits = "Coral Sea",
                            Type = "Oceans",
                            cCRS = cCRS)

landmass <- rnaturalearth::ne_countries(
  scale = "medium",
  returnclass = "sf"
) \%>\%
  sf::st_transform(cCRS)

dat_sf <- splnr_get_planningUnits(Bndry = Bndry,
                                  InnerB = landmass,
                                  CellArea = 10000,
                                  Shape = "Hexagon") \%>\%
  splnr_get_distCoast()
}
