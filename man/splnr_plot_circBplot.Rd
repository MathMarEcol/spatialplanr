% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splnr_plotting.R
\name{splnr_plot_circBplot}
\alias{splnr_plot_circBplot}
\title{Plot circular barplot}
\usage{
splnr_plot_circBplot(
  df,
  legend_color,
  legend_list,
  indicateTargets = TRUE,
  impTarget = NA,
  repTarget = NA,
  colTarget = "red"
)
}
\arguments{
\item{df}{data frame that should have the following column names: feature, value, group}

\item{legend_color}{vector list of colors; should have the group names and their corresponding colors}

\item{legend_list}{list of groups/legends of groups}

\item{indicateTargets}{logical on whether to show where the targets were set}

\item{impTarget}{target of the important features (in \%)}

\item{repTarget}{target of the representative features (in \%)}

\item{colTarget}{string with a colour value for the indicator line}
}
\value{
A ggplot object of the plot
}
\description{
Plot circular barplot
}
\examples{
# DISCLAIMER: THIS SOLUTION IS NOT ACTUALLY RUN WITH THESE TARGETS YET
s1 <- dat_soln \%>\%
  tibble::as_tibble()

p1 <- dat_problem

df_rep_imp <- prioritizr::eval_feature_representation_summary(p1,
                                                  s1[, 'solution_1'])\%>\%
  dplyr::select(feature, relative_held) \%>\%
  dplyr::mutate(relative_held = relative_held*100)

imp_layers <- c("Spp1", "Spp3")

target <- data.frame(feature = c("Spp1", "Spp2", "Spp3", "Spp4", "Spp5")) \%>\%
  dplyr::mutate(class = dplyr::if_else(.data$feature \%in\% imp_layers,
                          "important", "representative")) \%>\%
  dplyr::mutate(target = dplyr::if_else(class == "important",
                                            50/100, 30/100))

df <- merge(df_rep_imp, target) \%>\%
  dplyr::select(-target) \%>\%
  na.omit() \%>\%
  dplyr::rename(value = relative_held) \%>\%
  dplyr::rename(group = class)

colors <- c('important' = 'darkgreen',
            'representative' = 'darkred')
legends <- c('Important', 'Representative')

(splnr_plot_circBplot(df, legend_list = legends,
                          legend_color = colors,
                          impTarget = 50, repTarget = 30))
}
