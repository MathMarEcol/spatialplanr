% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splnr_plotting.R
\name{splnr_plot_solution}
\alias{splnr_plot_solution}
\title{Plot prioritizr solution}
\usage{
splnr_plot_solution(
  soln,
  colorVals = c(`TRUE` = "#3182bd", `FALSE` = "#c6dbef"),
  showLegend = TRUE,
  plotTitle = "Solution",
  legendTitle = "Planning Units"
)
}
\arguments{
\item{soln}{The \code{prioritizr} solution}

\item{colorVals}{A \code{list} object of named vectors that will match the color value with the according name. "TRUE" stands for selected planning units.}

\item{showLegend}{A logical command on whether to show the legend of the solution (Default: TRUE).}

\item{plotTitle}{A character value for the title of the plot. Can be empty ("").}

\item{legendTitle}{A character value for the title of the legend. Can be empty ("").}
}
\value{
A ggplot object of the plot
}
\description{
\code{splnr_plot_solution()} allows to plot the solution of a \code{prioritizr} conservation problem in a customisable way using \code{ggplot2}. This function requires a solution as an \code{sf} object with a column called \code{solution_1} and outputs a \code{ggobject}. It can be combined with the \code{spatialplanr} function \code{\link[=gg_add]{gg_add()}}.
}
\examples{
dat_problem <- prioritizr::problem(dat_species_bin \%>\% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),
                                   features = c("Spp1", "Spp2", "Spp3", "Spp4", "Spp5"),
                                   cost_column = "Cost") \%>\%
  prioritizr::add_min_set_objective() \%>\%
  prioritizr::add_relative_targets(0.3) \%>\%
  prioritizr::add_binary_decisions() \%>\%
  prioritizr::add_default_solver(verbose = FALSE)

dat_soln <- dat_problem \%>\%
 prioritizr::solve.ConservationProblem()

splnr_plot_solution(dat_soln)
}
