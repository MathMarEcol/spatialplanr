% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splnr_plotting.R
\name{splnr_gg_add}
\alias{splnr_gg_add}
\title{Add-ons for plotting}
\usage{
splnr_gg_add(
  PUs = NA,
  colorPUs = "grey80",
  Bndry = NA,
  colorBndry = "black",
  overlay = NA,
  colorOverlay = "grey20",
  contours = NA,
  cropOverlay = NA,
  colorsConts = "black",
  lockedInAreas = NA,
  Type = "Full",
  colInterest = NA,
  alphaLI = 0.5,
  colorLI = "black",
  legendL = "",
  labelL = "MPAs",
  ggtheme = "Default"
)
}
\arguments{
\item{PUs}{Planning Units as an \code{sf} object}

\item{colorPUs}{A color value for the outline of planning units.}

\item{Bndry}{The planning region boundaries as an \code{sf} object}

\item{colorBndry}{A color value for the outline of the boundary.}

\item{overlay}{An \code{sf} object of overlay polygon.}

\item{colorOverlay}{A color value for overlaymass.}

\item{contours}{An \code{sf} object of contours that are important to visualise (e.g. outline of sea mounts, ridges; can be produced with terra::as.contour()); up to 6 different contours possible.}

\item{cropOverlay}{An \code{sf} object with the boundary box used for cropping the overlay object.}

\item{colorsConts}{A color value for contours.}

\item{lockedInAreas}{An \code{sf} object with binary data of locked in areas in the prioritisation (e.g. MPAs).}

\item{Type}{Either "Full" or "Contours"; "Full" maps the locked in areas on top of the planning units; "Contours" draws the outline of the locked in areas.}

\item{colInterest}{column of data frame that contains binary information of the locked in areas to plot}

\item{alphaLI}{A value (0-1) for the opacity of the locked in areas when plotted on top of other plots.}

\item{colorLI}{A color value for the locked in areas.}

\item{legendL}{A character value for the title of the legend of the locked in areas. Can be empty ("").}

\item{labelL}{The legend label of the locked in area (e.g. MPAs)}

\item{ggtheme}{The theme applied to the plot. Can either be NA (default ggplot), "Default" (default spatialplanr: theme_bw() and some basic theme settings) or a user-defined list of theme properties.}
}
\value{
A ggplot object of the plot
}
\description{
This function allows to customise plots in a simple and reproducible way, by giving the option for several inputs that can be included in maps produced with the other functions of this package.It can be combined with the \code{spatialplanr} spatial plotting functions (e.g. \code{\link[=splnr_plot_MPAs]{splnr_plot_MPAs()}}, \code{\link[=splnr_plot_PUs]{splnr_plot_PUs()}}, \code{\link[=splnr_plot_solution]{splnr_plot_solution()}}, \code{\link[=splnr_plot_binFeature]{splnr_plot_binFeature()}}).
}
\examples{
dat_problem <- prioritizr::problem(dat_species_bin \%>\% dplyr::mutate(Cost = runif(n = dim(.)[[1]])),
  features = c("Spp1", "Spp2", "Spp3", "Spp4", "Spp5"),
  cost_column = "Cost"
) \%>\%
  prioritizr::add_min_set_objective() \%>\%
  prioritizr::add_relative_targets(0.3) \%>\%
  prioritizr::add_binary_decisions() \%>\%
  prioritizr::add_default_solver(verbose = FALSE)

dat_soln <- dat_problem \%>\%
  prioritizr::solve.ConservationProblem()

splnr_plot_solution(dat_soln) +
  splnr_gg_add(PUs = dat_PUs, ggtheme = "Default")
}
